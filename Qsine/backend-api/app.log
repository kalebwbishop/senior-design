2025-04-06 15:34:52,732 - __main__ - INFO - Starting Flask application
2025-04-06 15:34:52,747 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:34:52,784 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:35:10,462 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-06 15:35:17,084 - __main__ - INFO - Starting Flask application
2025-04-06 15:35:17,088 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:35:17,088 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:36:52,594 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:36:52,594 - __main__ - INFO - Starting text classification
2025-04-06 15:36:52,594 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:36:52,610 - __main__ - ERROR - Unhandled exception: expected string or bytes-like object, got 'list'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 289, in classify_text
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 28, in GetIngredients
    words = nltk.word_tokenize(ingredient)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 142, in word_tokenize
    sentences = [text] if preserve_line else sent_tokenize(text, language)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 120, in sent_tokenize
    return tokenizer.tokenize(text)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1280, in tokenize
    return list(self.sentences_from_text(text, realign_boundaries))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1340, in sentences_from_text
    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1328, in span_tokenize
    for sentence in slices:
                    ^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1457, in _realign_boundaries
    for sentence1, sentence2 in _pair_iter(slices):
                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 321, in _pair_iter
    prev = next(iterator)
           ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1429, in _slices_from_text
    for match, context in self._match_potential_end_contexts(text):
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1394, in _match_potential_end_contexts
    for match in self._lang_vars.period_context_re().finditer(text):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: expected string or bytes-like object, got 'list'
2025-04-06 15:36:52,647 - __main__ - INFO - Response: 500
2025-04-06 15:36:52,649 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:36:52] "[35m[1mPOST /classify-text HTTP/1.1[0m" 500 -
2025-04-06 15:38:28,838 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-06 15:38:41,290 - __main__ - INFO - Starting Flask application
2025-04-06 15:38:42,186 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-06 15:38:42,189 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-06 15:38:42,189 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:38:47,824 - __main__ - INFO - Starting Flask application
2025-04-06 15:38:47,824 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:38:47,839 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:38:48,144 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:38:48,144 - __main__ - INFO - Starting text classification
2025-04-06 15:38:48,144 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:38:48,159 - __main__ - ERROR - Unhandled exception: expected string or bytes-like object, got 'list'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 289, in classify_text
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 28, in GetIngredients
    words = nltk.word_tokenize(ingredient)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 142, in word_tokenize
    sentences = [text] if preserve_line else sent_tokenize(text, language)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 120, in sent_tokenize
    return tokenizer.tokenize(text)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1280, in tokenize
    return list(self.sentences_from_text(text, realign_boundaries))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1340, in sentences_from_text
    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1328, in span_tokenize
    for sentence in slices:
                    ^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1457, in _realign_boundaries
    for sentence1, sentence2 in _pair_iter(slices):
                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 321, in _pair_iter
    prev = next(iterator)
           ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1429, in _slices_from_text
    for match, context in self._match_potential_end_contexts(text):
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1394, in _match_potential_end_contexts
    for match in self._lang_vars.period_context_re().finditer(text):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: expected string or bytes-like object, got 'list'
2025-04-06 15:38:48,159 - __main__ - INFO - Response: 500
2025-04-06 15:38:48,159 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:38:48] "[35m[1mPOST /classify-text HTTP/1.1[0m" 500 -
2025-04-06 15:38:51,123 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:38:51,123 - __main__ - INFO - Starting text classification
2025-04-06 15:38:51,123 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:38:51,123 - __main__ - ERROR - Unhandled exception: expected string or bytes-like object, got 'list'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 289, in classify_text
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 28, in GetIngredients
    words = nltk.word_tokenize(ingredient)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 142, in word_tokenize
    sentences = [text] if preserve_line else sent_tokenize(text, language)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 120, in sent_tokenize
    return tokenizer.tokenize(text)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1280, in tokenize
    return list(self.sentences_from_text(text, realign_boundaries))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1340, in sentences_from_text
    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1328, in span_tokenize
    for sentence in slices:
                    ^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1457, in _realign_boundaries
    for sentence1, sentence2 in _pair_iter(slices):
                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 321, in _pair_iter
    prev = next(iterator)
           ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1429, in _slices_from_text
    for match, context in self._match_potential_end_contexts(text):
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1394, in _match_potential_end_contexts
    for match in self._lang_vars.period_context_re().finditer(text):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: expected string or bytes-like object, got 'list'
2025-04-06 15:38:51,123 - __main__ - INFO - Response: 500
2025-04-06 15:38:51,123 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:38:51] "[35m[1mPOST /classify-text HTTP/1.1[0m" 500 -
2025-04-06 15:40:12,142 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-06 15:40:13,653 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:40:24,450 - __main__ - INFO - Starting Flask application
2025-04-06 15:40:25,341 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-06 15:40:25,341 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-06 15:40:25,341 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:40:30,464 - __main__ - INFO - Starting Flask application
2025-04-06 15:40:30,464 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:40:30,480 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:40:32,121 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:40:32,121 - __main__ - INFO - Starting text classification
2025-04-06 15:40:32,121 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:40:32,342 - __main__ - ERROR - Unhandled exception: expected string or bytes-like object, got 'list'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 289, in classify_text
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 28, in GetIngredients
    words = nltk.word_tokenize(ingredient)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 142, in word_tokenize
    sentences = [text] if preserve_line else sent_tokenize(text, language)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 120, in sent_tokenize
    return tokenizer.tokenize(text)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1280, in tokenize
    return list(self.sentences_from_text(text, realign_boundaries))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1340, in sentences_from_text
    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1328, in span_tokenize
    for sentence in slices:
                    ^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1457, in _realign_boundaries
    for sentence1, sentence2 in _pair_iter(slices):
                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 321, in _pair_iter
    prev = next(iterator)
           ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1429, in _slices_from_text
    for match, context in self._match_potential_end_contexts(text):
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1394, in _match_potential_end_contexts
    for match in self._lang_vars.period_context_re().finditer(text):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: expected string or bytes-like object, got 'list'
2025-04-06 15:40:32,342 - __main__ - INFO - Response: 500
2025-04-06 15:40:32,342 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:40:32] "[35m[1mPOST /classify-text HTTP/1.1[0m" 500 -
2025-04-06 15:41:23,690 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-06 15:41:25,240 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:41:30,587 - __main__ - INFO - Starting Flask application
2025-04-06 15:41:30,597 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:41:30,604 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:41:30,853 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:41:30,853 - __main__ - INFO - Starting text classification
2025-04-06 15:41:30,853 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:43:11,213 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-06 15:43:13,494 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:43:17,076 - matplotlib - DEBUG - matplotlib data path: C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\matplotlib\mpl-data
2025-04-06 15:43:17,095 - matplotlib - DEBUG - CONFIGDIR=C:\Users\kaleb\.matplotlib
2025-04-06 15:43:17,097 - matplotlib - DEBUG - interactive is False
2025-04-06 15:43:17,097 - matplotlib - DEBUG - platform is win32
2025-04-06 15:43:17,169 - matplotlib - DEBUG - CACHEDIR=C:\Users\kaleb\.matplotlib
2025-04-06 15:43:17,170 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\kaleb\.matplotlib\fontlist-v390.json
2025-04-06 15:43:19,823 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Starting topology monitoring"}
2025-04-06 15:43:19,837 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:43:19,839 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:43:19,839 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:43:19,839 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:43:19,839 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:19,839 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:19,839 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:19,947 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Starting topology monitoring"}
2025-04-06 15:43:19,948 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:43:19,948 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:43:19,948 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:43:19,949 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:43:19,950 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:19,951 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:19,953 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:19,957 - __main__ - INFO - Starting Flask application
2025-04-06 15:43:19,968 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:43:19,970 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:43:19,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:43:19,999 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:43:20,028 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:43:20,032 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 14}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 14}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:20,050 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201361, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 47.000000000025466, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"ismaster\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 14}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 14}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 4800000...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 47.000000000025466, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 14}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 14}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:20,063 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:43:20,063 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.047000000000025466>]>", "message": "Topology description changed"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:20,063 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3b"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201361, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.047000000000025466>]>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3b, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.047000000000025466>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.047000000000025466>]>", "message": "Topology description changed"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:43:20,063 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:20,096 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 16}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 16}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:20,103 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 16}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 16}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:20,103 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:20,103 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:43:20,104 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:20,104 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:43:20,105 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:20,105 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:20,107 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"ismaster\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 16}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968600, \"i\": 16}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 4800000...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:20,107 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2d9576b937e122d293f3c"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:43:20,108 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "previousDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2d9576b937e122d293f3c, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:43:20,109 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:20,289 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:43:20,290 - __main__ - DEBUG - Request JSON: {'text': 'Help'}
2025-04-06 15:43:20,290 - __main__ - INFO - Starting text classification
2025-04-06 15:43:20,291 - __main__ - DEBUG - Received text for classification: Help...
2025-04-06 15:43:20,291 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:43:20,499 - __main__ - DEBUG - Retrieved ingredients: ['cream cheese, softened', 'shredded Cheddar cheese', 'sour cream', 'mayonnaise', 'cream cheese', 'taco seasoning mix', 'chopped pecans', 'olive oil', 'brown sugar', 'Worcestershire sauce', 'butter', 'salsa', 'refried beans', 'kosher salt', 'green onions, chopped', 'cayenne pepper, or to taste', 'onion, diced', 'garlic powder', 'ground beef', 'milk', 'salt', 'seasoned salt', 'ranch dressing mix', 'lemon juice', 'tomato, chopped', 'grated Parmesan cheese', 'salt and pepper to taste', 'all-purpose flour', 'shredded Cheddar-Monterey Jack cheese blend', 'guacamole', 'ground cinnamon', 'prepared horseradish', 'chili powder', 'dried beef', 'shredded lettuce', 'Velveeta', 'diced tomatoes with green chilies', 'chopped cilantro', 'lime, juiced', 'onion, chopped', 'garlic', 'dried basil', 'shredded Monterey Jack cheese', 'ranch dressing', 'onion powder', 'water', 'red onion', 'cream cheese, at room temperature', 'freshly ground black pepper', 'hot pepper sauce', 'chopped tomatoes', 'garlic, minced', 'ground black pepper', 'chicken broth', 'chopped green onions', 'Monterey Jack cheese', 'fresh cilantro', 'honey', 'chopped green chile peppers', 'chopped green chilies', 'cumin', 'shredded sharp Cheddar cheese', 'processed cheese food (such as Velveeta), cut into cubes', 'chopped fresh thyme', 'salt and ground black pepper to taste', "confectioners' sugar", 'vanilla extract', 'diced green onion', 'unsalted butter', 'green onions', 'scallions', 'roasted jalapeno peppers, seeded and chopped, or to taste', 'dried beef, chopped', 'low-fat cream cheese, softened', 'minced sweet onion (such as Vidalia)', 'capers - rinsed, drained, and chopped', 'lemon, zested and juiced', 'reduced-sodium seafood seasoning (such as Old Bay)', 'dried parsley', 'hot pepper sauce (such as Tabasco), or more to taste', 'tuna, drained', 'nacho cheese-flavored corn chips (such as Doritos), crushed', '1 bell pepper stem', 'pepper Jack cheese', 'alt-free Cajun seasoning,', 'peppercorns', 'carrot', 'jalapeno pepper with stem', 'crackers for serving', 'milk, or more to taste', 'garlic, pressed', 'ground black pepper, or to taste', 'Italian-style salad dressing', 'small curd cottage cheese', 'diced black olives, drained', 'shredded Swiss cheese', 'thinly sliced Vidalia sweet onion', 'hot sauce, or to taste', 'Velveeta, cut into 1/2-inch cubes', 'Rotel Diced Tomatoes and Green Chilies, undrained', 'breakfast pork sausage, cooked, drained', 'sausage', 'taco seasoning, or to taste', 'green onions, thinly sliced, white and green parts, divided', 'cilantro sprigs for garnish (optional)', 'corn oil', 'chorizo sausage', 'sliced mozzarella cheese', 'corn tortillas', "black-eyed peas (such as Bush's), drained", 'processed cheese (such as Velveeta), cubed', 'cherry or grape tomatoes', 'salt and freshly ground black pepper to taste', 'French cheese, such as Boursin', 'Garlic & Fine', 'chopped fresh basil or sliced green onion for garnish', 'shredded Pepper Jack cheese', 'dried, crushed Mexican oregano', 'chili beef soup', 'taco sauce', 'chopped black olives, drained', 'bone-in chicken breast halves', 'celery, finely diced', 'reduced-fat cream cheese', 'blue cheese dressing', "hot pepper sauce (such as Frank's RedHot)", 'skinless, boneless chicken breast halves', 'diced green chile peppers', 'jalapeno pepper, finely diced', 'shredded extra-sharp Cheddar cheese', 'diced pimento, drained', 'jalapeo pepper, seeded and minced (Optional)', 'ground cayenne pepper (Optional)', 'salt and black pepper to taste', 'cream cheese, slightly softened', 'ham, chopped', 'seasoned salt, or to taste', 'chopped pecans, or more to taste', 'dried cranberries', 'jalapeno pepper', 'pickled jalapenos', 'sugar', 'asiago cheese', 'hot Italian sausage links, casings removed', 'sharp Cheddar cheese, grated', 'frozen sweet corn, thawed and drained', 'fire-roasted diced tomatoes with green chiles', 'diced Hatch green chiles', 'diced fresh jalapeo peppers', 'sliced green onions', 'grated sharp Cheddar cheese', 'sliced green onion, or to taste', 'fresh Mexican chorizo', 'shredded Oaxaca cheese', 'smoked salmon, chopped', 'chopped green onion', 'chopped fresh dill weed', 'nonfat sour cream', 'iceberg lettuce - rinsed, dried, and shredded', 'green bell pepper, chopped', 'black olives, drained', 'extra lean ground beef', 'green bell peppers, diced', 'kosher salt, or to taste', 'cayenne pepper, to taste', 'ketchup', 'Dijon mustard', 'shredded Cheddar cheese, divided', 'chunk chicken, drained and flaked', 'artichoke hearts, drained and chopped', 'dry Italian-style salad dressing mix', 'Havarti cheese', 'finely shredded Parmesan cheese', 'sliced almonds', 'monosodium glutamate (MSG)', 'onion salt', 'black olives, chopped', 'crushed pineapple, drained', 'diced onion', 'chopped green bell pepper', 'seasoning salt', 'everything bagel seasoning', 'finely shredded sharp Cheddar cheese', 'Italian sausage', 'red bell pepper', 'jalapeno pepper, seeded and minced', 'diced tomatoes and green chiles (such as RO*TEL)', 'pasteurized cheese product (such as Velveeta), cubed', 'cream cheese, softened and cubed', 'Pepper Jack', 'salt added canned black beans, rinsed and drained', 'frozen corn', 'diced avocado (about 1/2 avocado)', 'tortilla chips for serving', 'mild Cheddar cheese, shredded', 'dried mixed fruit, chopped', 'peanut butter', 'creamy salad dressing', 'marinated artichoke hearts, drained and chopped', 'chili seasoning mix', 'white American cheese, cubed', 'milk, or as needed', 'cayenne pepper to taste', 'chili without beans', 'process cheese food, cubed', 'chunk white chicken in water, thoroughly drained', 'condensed cream of chicken soup', 'chopped jalapeno', 'processed American cheese', 'tomato, seeded and chopped', 'sour cream, room temperature', 'chopped black olives', 'sweet onion, cut into small dice', 'celery, cut into small dice', 'chicken chunks, shredded', 'granulated garlic', 'blue cheese salad dressing', 'chile-garlic sauce (such as Sriracha), or more to taste', 'shredded mozzarella cheese', 'goat cheese, softened', 'chopped fresh flat-leaf parsley', 'chopped fresh tarragon', 'garlic, minced, or more to taste', 'whole almonds, or as needed', 'large fresh rosemary sprigs', 'tomatoes, diced', 'vegetable oil', 'tomato, diced', 'roasted green chile peppers, seeded and chopped', 'shredded queso asadero (white Mexican cheese)', 'salt to taste', 'chipped beef, chopped', 'celery, finely chopped', 'onion, finely chopped', 'celery salt', 'paprika, or as desired', 'taco seasoning', 'tomato sauce', 'diced jalapeno peppers', 'butter, softened', 'apple pie spice', 'chopped sweet onion', 'dry taco seasoning mix', 'jalapeno pepper, diced, or more to taste', 'shredded Mexican cheese blend', 'lemons, juiced', 'green onion, chopped', 'dried dill weed to taste', 'water-packed tuna, drained and flaked', 'skinless boneless chicken breasts', 'Mexican-style corn, drained', 'light sour cream', '1/3-less-fat cream cheese, softened', 'diced green chiles', 'jalapeo peppers, seeded and finely chopped', 'onion', 'can white beans drained and rinsed', 'green chiles', 'hot sauce', 'cooked chicken', 'pepper jack cheese', 'jalapeno', "Libby's Pink Salmon-Canned NF", 'finely minced onion', 'liquid smoke flavoring', 'raclette cheese, rinds removed', 'chopped fresh thyme, or to taste (Optional)', 'ground black pepper to taste (Optional)', 'unsalted butter, softened', 'miniature semisweet chocolate chips', 'finely chopped pecans', 'spinach, chopped', 'sun-dried tomatoes, chopped', 'feta cheese crumbles', 'cherry tomatoes, halved', 'olives', 'dried oregano', 'cocktail sauce', 'mild salsa', 'diced red bell pepper', 'diced green bell pepper', 'cucumber, thinly sliced', 'caramel dip singles', 'toasted pecans', 'powdered sugar', 'light brown sugar', 'instant vanilla pudding mix', 'fresh lemon juice', 'pecans, divided', 'apple slices', 'prepared mustard', 'medium salsa', 'feta cheese', 'neufchatel cheese or cream cheese', 'minced garlic', 'honey roasted peanuts', 'blue cheese', 'butter, melted', 'finely chopped black olives', 'finely chopped green onions', 'garlic salt', 'chopped walnuts', 'cornstarch', 'black beans', 'fire-roasted corn', 'hot green chiles', 'thick and chunky salsa', 'pickled jalapeo', 'Chopped tomatoes', 'pickled red onions', 'chopped avocado', 'chopped cooked bacon', 'jalapeo chiles', 'Tortilla chips', 'cubed processed cheese food', 'condensed golden mushroom soup', 'diced tomatoes with green chile peppers', 'vegetarian baked beans', 'bulk spicy pork sausage', 'processed cheese food (such as Velveeta), cubed', 'diced tomatoes with green chile peppers (such as Rotel)', 'condensed cream of mushroom soup', "seasoned chicken-style vegetarian strips (such as Morningstar Farms Chik'n Strips), diced", 'reduced fat cream cheese, softened', 'reduced-fat ranch salad dressing', "hot buffalo wing sauce (such as Frank's REDHOT Buffalo Wing Sauce)", 'Colby-Monterey Jack cheese blend', 'deli-sliced corned beef (such as Buddig ), diced', 'green onions, finely chopped', 'finely chopped onion', 'salmon, drained and flaked', 'chopped parsley', 'cranberries', 'dried sweetened cranberries,', 'cilantro, chopped', 'jalapenos', 'orange marmalade', 'whipped cream cheese', 'marinated artichoke hearts, chopped, liquid reserved', 'prepared Dijon-style mustard', 'cranberry juice cocktail', 'dried cranberries, snipped, divided', 'heddar cheese', 'chives, divided', 'orange zest', 'pecans, toasted and finely chopped', 'crackers, crostini, and/or vegetable dippers for serving', '', 'extra-virgin olive oil,', 'frozen chopped spinach,', 'whole milk cottage cheese', 'lemon', 'red pepper flakes,', 'crumbled feta cheese,', 'freshly grated Parmesan cheese', 'refrigerated biscuits', 'strawberry-flavored cream cheese, softened', 'frozen whipped topping (Cool Whip), thawed', 'English cucumbers - peeled, seeded, and cut into 2-inch chunks', 'minced white onion', 'dried dill', 'hot pepper sauce (such as Tabasco), or to taste', 'green food coloring, or as needed (Optional)', 'bacon', 'dry ranch dressing mix', 'shallots, thinly sliced', 'pears, peeled, cored, and sliced', 'dry white wine', 'sourdough bread', 'Brie cheese', 'slivered almonds', 'assorted crackers']
2025-04-06 15:43:30,103 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:30,104 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:30,112 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10047.000000000025, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:30,113 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10047.000000000025, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:30,114 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:30,114 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:30,131 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:30,131 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:30,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10047.000000000025, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:30,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:30,153 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968610, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:30,155 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:40,112 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 22}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 22}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:40,112 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 22}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 22}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:40,112 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:40,119 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 22}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 22}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:40,119 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:40,120 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:40,150 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 24}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 24}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:40,151 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:40,155 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 24}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 24}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:40,156 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:40,156 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968620, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:40,172 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:50,118 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:50,118 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:50,118 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:50,118 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:50,127 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:50,127 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:50,157 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:50,157 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:50,157 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 28}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:50,166 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:43:50,174 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968630, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:43:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:43:50,174 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:00,133 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:00,133 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:00,135 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:00,136 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:00,144 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 31}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:00,147 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:00,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 33}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 33}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:00,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 33}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 33}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:00,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:00,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:00,182 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 33}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968640, \"i\": 33}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:00,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:10,125 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:10,125 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:10,149 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:10,150 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:10,151 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:10,153 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:10,178 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 28}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:10,179 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:10,184 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 28}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:10,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:10,192 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968650, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:10,194 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:20,143 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:20,145 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:20,153 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:20,155 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:20,158 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:20,160 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:20,188 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:20,189 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:20,192 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:20,193 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:20,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968660, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:20,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:30,151 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 24}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 24}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:30,158 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:30,161 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:30,163 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:30,173 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:30,177 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:30,197 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 34}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 34}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:30,199 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:30,199 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 34}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 34}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:30,199 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:30,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 36}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968670, \"i\": 36}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:30,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:40,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000000153, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 24}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 24}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:40,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:40,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000000153, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 24}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 24}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:40,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:40,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:40,191 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:40,207 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:40,207 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:40,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:40,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:40,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968680, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:40,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:50,172 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9983.999999999924, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:50,174 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:50,181 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9983.999999999924, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:50,184 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:50,189 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:50,190 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:50,219 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:50,221 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:50,249 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000000153, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:50,249 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968690, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:44:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:44:50,251 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:44:50,252 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:00,181 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:00,181 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:00,199 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:00,200 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:00,200 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:00,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:00,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 32}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 32}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:00,223 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:00,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 33}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 33}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:00,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:00,242 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 34}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968700, \"i\": 34}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:00,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:10,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:10,185 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:10,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:10,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:10,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:10,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:10,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 28}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:10,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:10,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 28}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:10,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:10,253 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968710, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:10,254 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:20,199 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 33}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 33}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:20,199 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:20,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 37}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 37}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:20,215 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:20,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 38}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 38}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:20,216 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:20,231 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9983.999999999924, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:20,231 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:20,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:20,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:20,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968720, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:20,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:30,201 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 24}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 24}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:30,202 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:30,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:30,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:30,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:30,218 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:30,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:30,247 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:30,261 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 31}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:30,263 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:30,266 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968730, \"i\": 31}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:30Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:30,266 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:40,198 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:40,212 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:40,230 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:40,230 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 31}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:40,230 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:40,230 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:40,251 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 32}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 32}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:40,251 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:40,262 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 34}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 34}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:40,262 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:40,279 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 35}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968740, \"i\": 35}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:40Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:40,279 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:50,219 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 28}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 28}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:50,219 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:50,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 29}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 29}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:50,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:50,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:50,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:50,266 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 30}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 30}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:50,266 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:50,282 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 31}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 31}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:50,282 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:45:50,282 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"region\": \"CENTRAL_US\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 32}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968750, \"i\": 32}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:45:50Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:45:50,282 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:00,228 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 25}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 25}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:00,228 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:00,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:00,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:00,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:00,244 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:00,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 26}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 26}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:00,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:00,294 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:00,294 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:00,294 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968760, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:00Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:00,294 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:10,241 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 35}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 35}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:10,243 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:10,259 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 37}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 37}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:10,259 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:10,259 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 38}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 38}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:10,259 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:10,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:10,276 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:10,292 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:10,292 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968770, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:10Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:10,292 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:10,292 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:20,248 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 27}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 27}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:20,248 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 201381, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:20,270 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 32}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 32}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:20,270 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 200410, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:20,284 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 32}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 32}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:20,284 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "driverConnectionId": 1, "serverConnectionId": 195896, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:20,299 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 38}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 37}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:20,299 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 195904, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:20,311 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000000153, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 38}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 38}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:20,311 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000000153, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 38}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968780, \"i\": 38}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:20Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:20,311 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 201445, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:20,311 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "driverConnectionId": 1, "serverConnectionId": 200403, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:22,428 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-06 15:46:22,795 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2547.0000000000255, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:22,796 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2530.999999999949, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:22,829 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3b"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2547.0000000000255, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:22,846 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2530.999999999949, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:22,846 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2530.999999999949, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:22,846 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2d9576b937e122d293f3c"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2547.0000000000255, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:24,264 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:46:26,992 - matplotlib - DEBUG - matplotlib data path: C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\matplotlib\mpl-data
2025-04-06 15:46:26,994 - matplotlib - DEBUG - CONFIGDIR=C:\Users\kaleb\.matplotlib
2025-04-06 15:46:26,994 - matplotlib - DEBUG - interactive is False
2025-04-06 15:46:26,994 - matplotlib - DEBUG - platform is win32
2025-04-06 15:46:27,056 - matplotlib - DEBUG - CACHEDIR=C:\Users\kaleb\.matplotlib
2025-04-06 15:46:27,059 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\kaleb\.matplotlib\fontlist-v390.json
2025-04-06 15:46:29,233 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Starting topology monitoring"}
2025-04-06 15:46:29,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:29,234 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:29,235 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:29,235 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,236 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,238 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,352 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Starting topology monitoring"}
2025-04-06 15:46:29,353 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,353 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:29,353 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:29,353 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:29,354 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,355 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,356 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,359 - __main__ - INFO - Starting Flask application
2025-04-06 15:46:29,366 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:46:29,375 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:46:29,401 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:29,424 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:29,426 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:29,431 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverConnectionId": 196057, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:29,431 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,431 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,431 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverConnectionId": 196057, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:29,456 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverConnectionId": 200584, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 39}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 39}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:29,457 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,457 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,460 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverConnectionId": 200584, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:29,462 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverConnectionId": 201532, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"ismaster\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 40}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 40}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 4800000...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:29,462 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cb"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,462 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cb, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,467 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "driverConnectionId": 1, "serverConnectionId": 201532, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:29,470 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:29,470 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:29,470 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:29,498 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverConnectionId": 201726, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"ismaster\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 42}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 42}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 4800000...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:29,498 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 42}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 42}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverConnectionId": 196057, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 47.000000000025466, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 42}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968789, \"i\": 42}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:29Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:29,513 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,513 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverConnectionId": 201726, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:29,513 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da158af6abac58d0f2cc"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "previousDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "newDescription": "<TopologyDescription id: 67f2da158af6abac58d0f2cc, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.047000000000025466>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:29,513 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "driverConnectionId": 1, "serverConnectionId": 196057, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:31,163 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-06 15:46:31,451 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2030.999999999949, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:31,480 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2016.0000000000764, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:31,481 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cb"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2000.0, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:31,540 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2014.9999999998727, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:31,540 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2014.9999999998727, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:31,540 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da158af6abac58d0f2cc"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 2014.9999999998727, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:46:32,434 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:46:35,151 - matplotlib - DEBUG - matplotlib data path: C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\matplotlib\mpl-data
2025-04-06 15:46:35,164 - matplotlib - DEBUG - CONFIGDIR=C:\Users\kaleb\.matplotlib
2025-04-06 15:46:35,166 - matplotlib - DEBUG - interactive is False
2025-04-06 15:46:35,166 - matplotlib - DEBUG - platform is win32
2025-04-06 15:46:35,213 - matplotlib - DEBUG - CACHEDIR=C:\Users\kaleb\.matplotlib
2025-04-06 15:46:35,213 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\kaleb\.matplotlib\fontlist-v390.json
2025-04-06 15:46:37,469 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Starting topology monitoring"}
2025-04-06 15:46:37,469 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,469 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:37,469 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:37,469 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:37,469 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,469 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,469 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,563 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Starting topology monitoring"}
2025-04-06 15:46:37,563 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,563 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:37,563 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:37,563 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "message": "Starting server monitoring"}
2025-04-06 15:46:37,563 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,563 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,563 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Connection pool created", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,578 - __main__ - INFO - Starting Flask application
2025-04-06 15:46:37,578 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:46:37,595 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:37,595 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:37,595 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:37,595 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:46:37,633 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 201727, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"ismaster\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 59}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 59}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 4800000...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:37,634 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 59}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 59}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:37,634 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 59}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 59}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:37,635 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,636 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,637 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,637 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,638 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 201727, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:37,638 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,638 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:37,638 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae32ff, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.03099999999994907>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,639 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:37,687 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:37,688 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:37,705 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
2025-04-06 15:46:37,719 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196067, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 66}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 66}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:37,719 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,719 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,719 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196067, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:37,719 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 30.99999999994907, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 66}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 66}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$dat...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:37,719 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,719 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,719 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:37,746 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201472, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": false, "durationMS": 32.000000000152795, "reply": "{\"helloOk\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"ismaster\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 67}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968797, \"i\": 67}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:37Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 4800000...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:37,747 - pymongo.connection - DEBUG - {"clientId": {"$oid": "67f2da1dbed07975f0ae3300"}, "message": "Connection pool ready", "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017}
2025-04-06 15:46:37,748 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "previousDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 67f2da1dbed07975f0ae3300, topology_type: ReplicaSetWithPrimary, servers: [<ServerDescription ('cluster0-shard-00-00.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-01.ykomc.mongodb.net', 27017) server_type: RSSecondary, rtt: 0.03099999999994907>, <ServerDescription ('cluster0-shard-00-02.ykomc.mongodb.net', 27017) server_type: RSPrimary, rtt: 0.032000000000152795>]>", "message": "Topology description changed"}
2025-04-06 15:46:37,749 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201472, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:37,872 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:46:37,872 - __main__ - DEBUG - Request JSON: {'text': 'Help'}
2025-04-06 15:46:37,872 - __main__ - INFO - Starting text classification
2025-04-06 15:46:37,872 - __main__ - DEBUG - Received text for classification: Help...
2025-04-06 15:46:37,872 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:46:38,074 - __main__ - DEBUG - Retrieved ingredients: ['cream cheese, softened', 'shredded Cheddar cheese', 'sour cream', 'mayonnaise', 'cream cheese', 'taco seasoning mix', 'chopped pecans', 'olive oil', 'brown sugar', 'Worcestershire sauce', 'butter', 'salsa', 'refried beans', 'kosher salt', 'green onions, chopped', 'cayenne pepper, or to taste', 'onion, diced', 'garlic powder', 'ground beef', 'milk', 'salt', 'seasoned salt', 'ranch dressing mix', 'lemon juice', 'tomato, chopped', 'grated Parmesan cheese', 'salt and pepper to taste', 'all-purpose flour', 'shredded Cheddar-Monterey Jack cheese blend', 'guacamole', 'ground cinnamon', 'prepared horseradish', 'chili powder', 'dried beef', 'shredded lettuce', 'Velveeta', 'diced tomatoes with green chilies', 'chopped cilantro', 'lime, juiced', 'onion, chopped', 'garlic', 'dried basil', 'shredded Monterey Jack cheese', 'ranch dressing', 'onion powder', 'water', 'red onion', 'cream cheese, at room temperature', 'freshly ground black pepper', 'hot pepper sauce', 'chopped tomatoes', 'garlic, minced', 'ground black pepper', 'chicken broth', 'chopped green onions', 'Monterey Jack cheese', 'fresh cilantro', 'honey', 'chopped green chile peppers', 'chopped green chilies', 'cumin', 'shredded sharp Cheddar cheese', 'processed cheese food (such as Velveeta), cut into cubes', 'chopped fresh thyme', 'salt and ground black pepper to taste', "confectioners' sugar", 'vanilla extract', 'diced green onion', 'unsalted butter', 'green onions', 'scallions']
2025-04-06 15:46:47,667 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 109}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 109}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:47,667 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:47,681 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 109}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 109}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:47,681 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10047.000000000025, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 109}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 109}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"ma...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:47,683 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:47,683 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:47,745 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 116}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 116}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:47,761 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:47,777 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10047.000000000025, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 117}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 117}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:47,778 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:47,791 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10030.999999999949, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 120}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968807, \"i\": 120}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:47Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"ma...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:47,793 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:57,686 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10032.000000000153, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 61}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 61}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:57,686 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:57,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 62}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 62}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:57,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"nodeType\": \"ELECTABLE\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 62}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 62}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:57,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:57,690 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:57,768 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 69}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 69}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:57,768 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:57,782 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 71}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 71}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:57,782 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:46:57,790 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 71}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968817, \"i\": 71}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:46:57Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:46:57,791 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:07,700 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"diskState\": \"READY\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 64}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 64}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:07,701 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 64}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 64}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:07,702 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:07,702 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 64}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 64}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:07,702 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:07,704 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:07,777 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-c\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 70}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 70}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:07,777 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:07,777 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 70}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 70}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:07,792 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:07,798 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"availabilityZone\": \"us-central1-f\", \"diskState\": \"READY\", \"workloadType\": \"OPERATIONAL\", \"region\": \"CENTRAL_US\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 70}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968827, \"i\": 70}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:07Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:07,798 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:13,769 - __main__ - INFO - Allergens detected: {'recipe_name': 'Cheese Dips and Spreads Recipes', 'allergies': ['legume allergy', 'milk allergy / lactose intolerance', 'poultry allergy', 'allium allergy', 'honey allergy', 'cruciferous allergy', 'citrus allergy', 'ltp allergy', 'aquagenic urticaria', 'olive oil allergy', 'nut allergy', 'sugar allergy / intolerance', 'nightshade allergy']}
2025-04-06 15:47:13,769 - __main__ - INFO - Response: 200
2025-04-06 15:47:13,770 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:47:13] "POST /classify-text HTTP/1.1" 200 -
2025-04-06 15:47:17,697 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 9985.000000000127, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"availabilityZone\": \"us-central1-c\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 69}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 69}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:17,697 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 196058, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:17,713 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-b\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 69}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 69}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:17,713 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"availabilityZone\": \"us-central1-f\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 69}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 69}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:17,713 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200522, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:17,713 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "driverConnectionId": 1, "serverConnectionId": 200901, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:17,780 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10014.999999999873, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effdd2fa2873cff13d6316\"}, \"counter\": 3}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"diskState\": \"READY\", \"nodeType\": \"ELECTABLE\", \"availabilityZone\": \"us-central1-c\", \"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\"}, \"me\": \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 71}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 71}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:17,780 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 196038, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:17,793 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10000.0, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effc8777f2ef32f77ee9e4\"}, \"counter\": 4}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"secondary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"region\": \"CENTRAL_US\", \"provider\": \"GCP\", \"workloadType\": \"OPERATIONAL\", \"availabilityZone\": \"us-central1-b\", \"nodeType\": \"ELECTABLE\", \"diskState\": \"READY\"}, \"me\": \"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 73}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 73}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-04-06T1...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:17,803 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 200533, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:17,812 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 10016.000000000076, "reply": "{\"topologyVersion\": {\"processId\": {\"$oid\": \"67effb3ebbc69676f1baa0d3\"}, \"counter\": 6}, \"hosts\": [\"cluster0-shard-00-00.ykomc.mongodb.net:27017\", \"cluster0-shard-00-01.ykomc.mongodb.net:27017\", \"cluster0-shard-00-02.ykomc.mongodb.net:27017\"], \"setName\": \"atlas-118nwm-shard-0\", \"setVersion\": 145, \"isWritablePrimary\": true, \"primary\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"tags\": {\"provider\": \"GCP\", \"region\": \"CENTRAL_US\", \"workloadType\": \"OPERATIONAL\", \"diskState\": \"READY\", \"availabilityZone\": \"us-central1-f\", \"nodeType\": \"ELECTABLE\"}, \"me\": \"cluster0-shard-00-02.ykomc.mongodb.net:27017\", \"electionId\": {\"$oid\": \"7fffffff00000000000001ef\"}, \"lastWrite\": {\"opTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 73}}, \"t\": 495}, \"lastWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}, \"majorityOpTime\": {\"ts\": {\"$timestamp\": {\"t\": 1743968837, \"i\": 73}}, \"t\": 495}, \"majorityWriteDate\": {\"$date\": \"2025-04-06T19:47:17Z\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxW...", "message": "Server heartbeat succeeded"}
2025-04-06 15:47:17,813 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "driverConnectionId": 1, "serverConnectionId": 201544, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
2025-04-06 15:47:20,526 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-06 15:47:20,761 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 3047.0000000000255, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:47:20,761 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 3047.0000000000255, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:47:20,761 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae32ff"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 3061.999999999898, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:47:20,808 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "serverHost": "cluster0-shard-00-01.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 3016.0000000000764, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:47:20,840 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "serverHost": "cluster0-shard-00-00.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 3030.999999999949, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:47:20,862 - pymongo.topology - DEBUG - {"topologyId": {"$oid": "67f2da1dbed07975f0ae3300"}, "serverHost": "cluster0-shard-00-02.ykomc.mongodb.net", "serverPort": 27017, "awaited": true, "durationMS": 3047.0000000000255, "failure": "\"_OperationCancelled('operation cancelled')\"", "driverConnectionId": 1, "message": "Server heartbeat failed"}
2025-04-06 15:47:22,282 - werkzeug - INFO -  * Restarting with stat
2025-04-06 15:47:27,462 - __main__ - INFO - Starting Flask application
2025-04-06 15:47:27,462 - werkzeug - WARNING -  * Debugger is active!
2025-04-06 15:47:27,479 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-06 15:47:27,731 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:47:27,731 - __main__ - INFO - Starting text classification
2025-04-06 15:47:27,731 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:48:03,315 - __main__ - INFO - Allergens detected: {'recipe_name': 'Cheese Dips and Spreads Recipes', 'allergies': ['legume allergy', 'milk allergy / lactose intolerance', 'poultry allergy', 'allium allergy', 'honey allergy', 'cruciferous allergy', 'citrus allergy', 'ltp allergy', 'aquagenic urticaria', 'olive oil allergy', 'nut allergy', 'sugar allergy / intolerance', 'nightshade allergy']}
2025-04-06 15:48:03,315 - __main__ - INFO - Response: 200
2025-04-06 15:48:03,330 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:48:03] "POST /classify-text HTTP/1.1" 200 -
2025-04-06 15:51:00,572 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:51:00,572 - __main__ - INFO - Starting text classification
2025-04-06 15:51:00,572 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:51:34,020 - __main__ - INFO - Allergens detected: {'recipe_name': 'Cheese Dips and Spreads Recipes', 'allergies': ['legume allergy', 'milk allergy / lactose intolerance', 'poultry allergy', 'allium allergy', 'honey allergy', 'cruciferous allergy', 'citrus allergy', 'ltp allergy', 'aquagenic urticaria', 'olive oil allergy', 'nut allergy', 'sugar allergy / intolerance', 'nightshade allergy']}
2025-04-06 15:51:34,020 - __main__ - INFO - Response: 200
2025-04-06 15:51:34,025 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:51:34] "POST /classify-text HTTP/1.1" 200 -
2025-04-06 15:51:35,775 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:51:35,775 - __main__ - INFO - Starting text classification
2025-04-06 15:51:35,775 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:52:08,823 - __main__ - INFO - Allergens detected: {'recipe_name': 'Cheese Dips and Spreads Recipes', 'allergies': ['legume allergy', 'milk allergy / lactose intolerance', 'poultry allergy', 'allium allergy', 'honey allergy', 'cruciferous allergy', 'citrus allergy', 'ltp allergy', 'aquagenic urticaria', 'olive oil allergy', 'nut allergy', 'sugar allergy / intolerance', 'nightshade allergy']}
2025-04-06 15:52:08,823 - __main__ - INFO - Response: 200
2025-04-06 15:52:08,823 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:52:08] "POST /classify-text HTTP/1.1" 200 -
2025-04-06 15:52:25,935 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-06 15:52:25,935 - __main__ - INFO - Starting text classification
2025-04-06 15:52:25,935 - __main__ - INFO - Text classified as: Cheese Dips and Spreads Recipes
2025-04-06 15:52:59,470 - __main__ - INFO - Allergens detected: {'recipe_name': 'Cheese Dips and Spreads Recipes', 'allergies': ['legume allergy', 'milk allergy / lactose intolerance', 'poultry allergy', 'allium allergy', 'honey allergy', 'cruciferous allergy', 'citrus allergy', 'ltp allergy', 'aquagenic urticaria', 'olive oil allergy', 'nut allergy', 'sugar allergy / intolerance', 'nightshade allergy']}
2025-04-06 15:52:59,470 - __main__ - INFO - Response: 200
2025-04-06 15:52:59,470 - werkzeug - INFO - 127.0.0.1 - - [06/Apr/2025 15:52:59] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 15:44:42,813 - __main__ - INFO - Request: POST http://localhost:5001/upload-image
2025-04-07 15:44:43,032 - __main__ - ERROR - Unhandled exception: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 891, in dispatch_request
    self.raise_routing_exception(req)
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 500, in raise_routing_exception
    raise request.routing_exception  # type: ignore[misc]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\ctx.py", line 362, in match_request
    result = self.url_adapter.match(return_rule=True)  # type: ignore
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\routing\map.py", line 629, in match
    raise NotFound() from None
werkzeug.exceptions.NotFound: 404 Not Found: The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.
2025-04-07 15:44:43,067 - __main__ - INFO - Response: 500
2025-04-07 15:44:43,067 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 15:44:43] "[35m[1mPOST /upload-image HTTP/1.1[0m" 500 -
2025-04-07 15:45:39,735 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 15:45:40,027 - __main__ - INFO - Starting image classification
2025-04-07 15:45:40,027 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 15:45:44,558 - __main__ - INFO - Image classified as: (0.05295345187187195, 'recipes_desserts_cookies')
2025-04-07 15:45:44,781 - __main__ - ERROR - Error during image classification: expected string or bytes-like object, got 'list'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 28, in GetIngredients
    words = nltk.word_tokenize(ingredient)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 142, in word_tokenize
    sentences = [text] if preserve_line else sent_tokenize(text, language)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\__init__.py", line 120, in sent_tokenize
    return tokenizer.tokenize(text)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1280, in tokenize
    return list(self.sentences_from_text(text, realign_boundaries))
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1340, in sentences_from_text
    return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1328, in span_tokenize
    for sentence in slices:
                    ^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1457, in _realign_boundaries
    for sentence1, sentence2 in _pair_iter(slices):
                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 321, in _pair_iter
    prev = next(iterator)
           ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1429, in _slices_from_text
    for match, context in self._match_potential_end_contexts(text):
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tokenize\punkt.py", line 1394, in _match_potential_end_contexts
    for match in self._lang_vars.period_context_re().finditer(text):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: expected string or bytes-like object, got 'list'
2025-04-07 15:45:44,805 - __main__ - INFO - Response: 500
2025-04-07 15:45:44,806 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 15:45:44] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 15:46:22,216 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 15:46:23,747 - werkzeug - INFO -  * Restarting with stat
2025-04-07 15:46:48,124 - __main__ - INFO - Starting Flask application
2025-04-07 15:46:48,195 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 15:46:48,204 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 15:46:48,439 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 15:46:48,439 - __main__ - INFO - Starting image classification
2025-04-07 15:46:48,439 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 15:46:50,572 - __main__ - INFO - Image classified as: (0.05295345187187195, 'recipes_desserts_cookies')
2025-04-07 15:46:50,759 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 15:46:50,796 - __main__ - INFO - Response: 500
2025-04-07 15:46:50,798 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 15:46:50] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 15:48:08,787 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 15:48:10,276 - werkzeug - INFO -  * Restarting with stat
2025-04-07 15:48:15,421 - __main__ - INFO - Starting Flask application
2025-04-07 15:48:15,441 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 15:48:15,463 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 16:28:36,221 - __main__ - INFO - Request: GET http://localhost:5001/barcode/014100099482
2025-04-07 16:28:36,232 - __main__ - INFO - Looking up barcode: 014100099482
2025-04-07 16:28:36,717 - __main__ - INFO - Product not found in database for barcode: 014100099482, attempting external lookup
2025-04-07 16:28:37,472 - __main__ - INFO - Product saved/updated in database for barcode: 014100099482
2025-04-07 16:28:37,472 - __main__ - INFO - Processing allergens for product: Vanilla cupcake grahams baked graham snacks, vanilla cupcake
2025-04-07 16:28:41,634 - __main__ - INFO - Request: GET http://localhost:5001/barcode/014100099482
2025-04-07 16:28:41,635 - __main__ - INFO - Looking up barcode: 014100099482
2025-04-07 16:28:41,776 - __main__ - INFO - Product saved/updated in database for barcode: 014100099482
2025-04-07 16:28:41,776 - __main__ - INFO - Processing allergens for product: Vanilla cupcake grahams baked graham snacks, vanilla cupcake
2025-04-07 16:28:52,970 - __main__ - INFO - Allergens detected: {'recipe_name': 'Vanilla cupcake grahams baked graham snacks, vanilla cupcake', 'allergies': ['oral allergy syndrome', 'canola oil allergy', 'corn allergy', 'milk allergy / lactose intolerance', 'legume allergy', 'pumpkin allergy', 'radish allergy', 'soy allergy', 'sugar allergy / intolerance', 'potato allergy', 'nightshade allergy', 'gluten allergy']}
2025-04-07 16:28:52,970 - __main__ - INFO - Response: 200
2025-04-07 16:28:52,970 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:28:52] "GET /barcode/014100099482 HTTP/1.1" 200 -
2025-04-07 16:28:55,222 - __main__ - INFO - Allergens detected: {'recipe_name': 'Vanilla cupcake grahams baked graham snacks, vanilla cupcake', 'allergies': ['oral allergy syndrome', 'canola oil allergy', 'corn allergy', 'milk allergy / lactose intolerance', 'legume allergy', 'pumpkin allergy', 'radish allergy', 'soy allergy', 'sugar allergy / intolerance', 'potato allergy', 'nightshade allergy', 'gluten allergy']}
2025-04-07 16:28:55,222 - __main__ - INFO - Response: 200
2025-04-07 16:28:55,222 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:28:55] "GET /barcode/014100099482 HTTP/1.1" 200 -
2025-04-07 16:28:55,348 - __main__ - INFO - Request: GET http://localhost:5001/barcode/014100099482
2025-04-07 16:28:55,348 - __main__ - INFO - Looking up barcode: 014100099482
2025-04-07 16:28:55,452 - __main__ - INFO - Product saved/updated in database for barcode: 014100099482
2025-04-07 16:28:55,452 - __main__ - INFO - Processing allergens for product: Vanilla cupcake grahams baked graham snacks, vanilla cupcake
2025-04-07 16:29:07,578 - __main__ - INFO - Allergens detected: {'recipe_name': 'Vanilla cupcake grahams baked graham snacks, vanilla cupcake', 'allergies': ['oral allergy syndrome', 'canola oil allergy', 'corn allergy', 'milk allergy / lactose intolerance', 'legume allergy', 'pumpkin allergy', 'radish allergy', 'soy allergy', 'sugar allergy / intolerance', 'potato allergy', 'nightshade allergy', 'gluten allergy']}
2025-04-07 16:29:07,578 - __main__ - INFO - Response: 200
2025-04-07 16:29:07,578 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:29:07] "GET /barcode/014100099482 HTTP/1.1" 200 -
2025-04-07 16:30:23,051 - __main__ - INFO - Request: GET http://localhost:5001/get-allergens
2025-04-07 16:30:23,051 - __main__ - INFO - Retrieving allergen list
2025-04-07 16:30:23,051 - __main__ - INFO - Returning 57 allergens
2025-04-07 16:30:23,051 - __main__ - INFO - Response: 200
2025-04-07 16:30:23,051 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:30:23] "GET /get-allergens HTTP/1.1" 200 -
2025-04-07 16:30:53,076 - __main__ - INFO - Request: GET http://localhost:5001/get-allergens
2025-04-07 16:30:53,076 - __main__ - INFO - Retrieving allergen list
2025-04-07 16:30:53,076 - __main__ - INFO - Returning 57 allergens
2025-04-07 16:30:53,076 - __main__ - INFO - Response: 200
2025-04-07 16:30:53,076 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:30:53] "GET /get-allergens HTTP/1.1" 200 -
2025-04-07 16:36:39,847 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 16:36:41,299 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:40:48,450 - __main__ - INFO - Starting Flask application
2025-04-07 16:40:49,351 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 16:40:49,351 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 16:40:49,351 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:40:54,337 - __main__ - INFO - Starting Flask application
2025-04-07 16:40:54,337 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 16:40:54,354 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 16:42:19,301 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 16:42:20,557 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:48:03,293 - __main__ - INFO - Starting Flask application
2025-04-07 16:48:04,174 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 16:48:04,175 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 16:48:04,176 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:48:08,467 - __main__ - INFO - Starting Flask application
2025-04-07 16:48:08,474 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 16:48:08,482 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 16:48:08,698 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 16:48:08,980 - __main__ - INFO - Starting image classification
2025-04-07 16:48:08,980 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 16:48:11,119 - __main__ - INFO - Image classified as: (0.7665870785713196, 'recipes_desserts_cobblers')
2025-04-07 16:48:11,120 - __main__ - ERROR - Error during image classification: [Errno 2] No such file or directory: 'data.json'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 101, in classify_image
    ingredients = get_ingredients_by_category(classification)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../data\get_ingredients.py", line 11, in get_ingredients_by_category
    with open(json_file_path, "r") as file:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'data.json'
2025-04-07 16:48:11,121 - __main__ - INFO - Response: 500
2025-04-07 16:48:11,122 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:48:11] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 16:50:09,182 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 16:50:10,890 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:50:44,802 - __main__ - INFO - Starting Flask application
2025-04-07 16:50:45,691 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 16:50:45,691 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 16:50:45,694 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:50:50,154 - __main__ - INFO - Starting Flask application
2025-04-07 16:50:50,173 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 16:50:50,182 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 16:51:05,243 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 16:51:05,712 - __main__ - INFO - Starting image classification
2025-04-07 16:51:05,712 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 16:51:07,915 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 16:51:11,386 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 16:51:11,389 - __main__ - INFO - Response: 500
2025-04-07 16:51:11,390 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:51:11] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 16:53:22,551 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 16:53:24,210 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:56:28,833 - __main__ - INFO - Starting Flask application
2025-04-07 16:56:29,705 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 16:56:29,705 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 16:56:29,707 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:56:34,137 - __main__ - INFO - Starting Flask application
2025-04-07 16:56:34,137 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 16:56:34,154 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 16:56:39,788 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 16:56:40,255 - __main__ - INFO - Starting image classification
2025-04-07 16:56:40,255 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 16:56:42,543 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 16:56:46,821 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 16:56:46,824 - __main__ - INFO - Response: 500
2025-04-07 16:56:46,825 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 16:56:46] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 16:57:33,499 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 16:57:34,823 - werkzeug - INFO -  * Restarting with stat
2025-04-07 16:57:39,542 - __main__ - INFO - Starting Flask application
2025-04-07 16:57:39,549 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 16:57:39,557 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:00:47,537 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:00:48,713 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:01:41,177 - __main__ - INFO - Starting Flask application
2025-04-07 17:01:42,055 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:01:42,056 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:01:42,057 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:01:46,412 - __main__ - INFO - Starting Flask application
2025-04-07 17:01:46,420 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:01:46,428 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:01:53,987 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:01:54,471 - __main__ - INFO - Starting image classification
2025-04-07 17:01:54,472 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:01:56,701 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 17:01:57,163 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 17:01:57,164 - __main__ - INFO - Response: 500
2025-04-07 17:01:57,164 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:01:57] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:02:58,076 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:02:59,325 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:03:03,753 - __main__ - INFO - Starting Flask application
2025-04-07 17:03:03,765 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:03:03,773 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:03:59,855 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:04:00,420 - __main__ - INFO - Starting image classification
2025-04-07 17:04:00,420 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:04:02,611 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 17:04:02,998 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 17:04:02,999 - __main__ - INFO - Response: 500
2025-04-07 17:04:02,999 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:04:02] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:04:40,015 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:04:41,391 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:04:45,955 - __main__ - INFO - Starting Flask application
2025-04-07 17:04:45,961 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:04:45,969 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:05:00,086 - __main__ - INFO - Starting Flask application
2025-04-07 17:05:00,964 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:05:00,964 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:05:00,964 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:05:05,193 - __main__ - INFO - Starting Flask application
2025-04-07 17:05:05,199 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:05:05,207 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:05:17,458 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:05:17,920 - __main__ - INFO - Starting image classification
2025-04-07 17:05:17,920 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:05:20,069 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 17:05:20,455 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 17:05:20,464 - __main__ - INFO - Response: 500
2025-04-07 17:05:20,466 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:05:20] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:05:44,040 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:05:45,437 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:05:50,034 - __main__ - INFO - Starting Flask application
2025-04-07 17:05:50,041 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:05:50,049 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:06:18,262 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:06:19,431 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:06:24,152 - __main__ - INFO - Starting Flask application
2025-04-07 17:06:24,158 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:06:24,165 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:06:36,669 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:06:37,906 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:06:42,451 - __main__ - INFO - Starting Flask application
2025-04-07 17:06:42,458 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:06:42,466 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:07:24,656 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:07:25,111 - __main__ - INFO - Starting image classification
2025-04-07 17:07:25,111 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:07:27,269 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 17:07:27,475 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 17:07:27,477 - __main__ - INFO - Response: 500
2025-04-07 17:07:27,479 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:07:27] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:08:40,875 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:08:42,129 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:08:46,698 - __main__ - INFO - Starting Flask application
2025-04-07 17:08:46,712 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:08:46,721 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:08:56,932 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:08:58,205 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:09:02,736 - __main__ - INFO - Starting Flask application
2025-04-07 17:09:02,742 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:09:02,750 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:09:09,714 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:09:10,176 - __main__ - INFO - Starting image classification
2025-04-07 17:09:10,176 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:09:12,334 - __main__ - INFO - Image classified as: (0.8749290704727173, 'recipes_desserts_cobblers')
2025-04-07 17:09:12,336 - __main__ - ERROR - Error during image classification: 'tuple' object has no attribute 'replace'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 101, in classify_image
    ingredients = get_ingredients_by_category(classification)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../data\get_ingredients.py", line 8, in get_ingredients_by_category
    categorySearch = categorySearch.replace(" ", "_").replace("-", "_")
                     ^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'tuple' object has no attribute 'replace'
2025-04-07 17:09:12,339 - __main__ - INFO - Response: 500
2025-04-07 17:09:12,341 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:09:12] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:09:45,214 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:09:46,480 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:09:51,103 - __main__ - INFO - Starting Flask application
2025-04-07 17:09:51,110 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:09:51,119 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:10:10,976 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:10:12,189 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:10:16,702 - __main__ - INFO - Starting Flask application
2025-04-07 17:10:16,708 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:10:16,717 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:10:22,112 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:10:22,682 - __main__ - INFO - Starting image classification
2025-04-07 17:10:22,682 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:10:24,848 - __main__ - INFO - Image classified as: recipes_desserts_cobblers
2025-04-07 17:10:25,082 - __main__ - ERROR - Error during image classification: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 104, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 68, in ProcessRecipe
    df_allergens = pd.DataFrame.from_dict(AllergenMatch(ingredients, allergens))
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 46, in AllergenMatch
    query_vector = vectorizer.transform(ingredients)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 2129, in transform
    return self._tfidf.transform(X, copy=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\feature_extraction\text.py", line 1700, in transform
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 2944, in validate_data
    out = check_array(X, input_name="X", **check_params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\sklearn\utils\validation.py", line 1130, in check_array
    raise ValueError(
ValueError: Found array with 0 sample(s) (shape=(0, 192)) while a minimum of 1 is required by TfidfTransformer.
2025-04-07 17:10:25,085 - __main__ - INFO - Response: 500
2025-04-07 17:10:25,086 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:10:25] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:10:56,694 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:10:58,182 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:11:02,765 - __main__ - INFO - Starting Flask application
2025-04-07 17:11:02,771 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:11:02,775 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:12:16,639 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\custom_model\\classify.py', reloading
2025-04-07 17:12:17,706 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:12:21,993 - __main__ - INFO - Starting Flask application
2025-04-07 17:12:22,000 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:12:22,009 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:12:27,144 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:12:27,632 - __main__ - INFO - Starting image classification
2025-04-07 17:12:27,633 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:12:29,784 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:14:58,647 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:15:00,748 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:15:05,992 - __main__ - INFO - Starting Flask application
2025-04-07 17:15:06,001 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:15:06,009 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:15:41,271 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:15:41,742 - __main__ - INFO - Starting image classification
2025-04-07 17:15:41,742 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:15:43,953 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:15:54,569 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:15:56,707 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:16:01,615 - __main__ - INFO - Starting Flask application
2025-04-07 17:16:01,622 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:16:01,630 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:16:22,570 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:16:23,019 - __main__ - INFO - Starting image classification
2025-04-07 17:16:23,019 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:16:25,212 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:17:38,675 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:17:40,402 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:17:45,464 - __main__ - INFO - Starting Flask application
2025-04-07 17:17:45,483 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:17:45,501 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:18:16,952 - __main__ - INFO - Starting Flask application
2025-04-07 17:18:17,842 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:18:17,843 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:18:17,843 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:18:22,007 - __main__ - INFO - Starting Flask application
2025-04-07 17:18:22,029 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:18:22,037 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:18:42,242 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:18:42,699 - __main__ - INFO - Starting image classification
2025-04-07 17:18:42,699 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:18:44,875 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:19:44,148 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:19:46,311 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:19:53,185 - __main__ - INFO - Starting Flask application
2025-04-07 17:19:54,093 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:19:54,093 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:19:54,095 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:19:59,007 - __main__ - INFO - Starting Flask application
2025-04-07 17:19:59,013 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:19:59,021 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:19:59,232 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:19:59,426 - __main__ - INFO - Starting image classification
2025-04-07 17:19:59,426 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:20:01,625 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:20:46,154 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:20:48,372 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:20:55,746 - __main__ - INFO - Starting Flask application
2025-04-07 17:20:56,652 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:20:56,652 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:20:56,654 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:21:01,775 - __main__ - INFO - Starting Flask application
2025-04-07 17:21:01,797 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:21:01,807 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:21:02,134 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:21:02,407 - __main__ - INFO - Starting image classification
2025-04-07 17:21:02,407 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:21:05,063 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:21:05,063 - __main__ - ERROR - Error during image classification: [Errno 2] No such file or directory: '.\\data/data.json'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 101, in classify_image
    ingredients = get_ingredients_by_category(classification)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../data\get_ingredients.py", line 20, in get_ingredients_by_category
    with open(json_file_path, "r") as file:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '.\\data/data.json'
2025-04-07 17:21:05,065 - __main__ - INFO - Response: 500
2025-04-07 17:21:05,066 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:21:05] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:22:39,792 - __main__ - INFO - Starting Flask application
2025-04-07 17:22:40,675 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:22:40,676 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:22:40,677 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:22:44,800 - __main__ - INFO - Starting Flask application
2025-04-07 17:22:44,806 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:22:44,814 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:22:45,028 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:22:45,202 - __main__ - INFO - Starting image classification
2025-04-07 17:22:45,202 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:22:47,321 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:23:46,392 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:23:48,149 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:23:52,361 - __main__ - INFO - Starting Flask application
2025-04-07 17:23:52,367 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:23:52,375 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:24:28,781 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:24:29,982 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:24:34,161 - __main__ - INFO - Starting Flask application
2025-04-07 17:24:34,167 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:24:34,176 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:24:43,098 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:24:43,591 - __main__ - INFO - Starting image classification
2025-04-07 17:24:43,593 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:24:45,682 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:25:16,424 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:25:18,092 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:25:22,335 - __main__ - INFO - Starting Flask application
2025-04-07 17:25:22,341 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:25:22,349 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:25:28,728 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:25:29,803 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:25:33,918 - __main__ - INFO - Starting Flask application
2025-04-07 17:25:33,924 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:25:33,933 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:25:48,381 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:25:48,820 - __main__ - INFO - Starting image classification
2025-04-07 17:25:48,820 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:25:50,889 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:25:50,889 - __main__ - ERROR - Error during image classification: [Errno 2] No such file or directory: 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\data/data.json'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 105, in classify_image
    ingredients = get_ingredients_by_category(classification, json_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../data\get_ingredients.py", line 20, in get_ingredients_by_category
    with open(json_file_path, "r") as file:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\data/data.json'
2025-04-07 17:25:50,891 - __main__ - INFO - Response: 500
2025-04-07 17:25:50,891 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:25:50] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:26:22,823 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:26:23,279 - __main__ - INFO - Starting image classification
2025-04-07 17:26:23,279 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:26:24,356 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:26:24,356 - __main__ - ERROR - Error during image classification: [Errno 2] No such file or directory: 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\data/data.json'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 105, in classify_image
    ingredients = get_ingredients_by_category(classification, json_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../data\get_ingredients.py", line 20, in get_ingredients_by_category
    with open(json_file_path, "r") as file:
         ^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\data/data.json'
2025-04-07 17:26:24,361 - __main__ - INFO - Response: 500
2025-04-07 17:26:24,362 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:26:24] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:26:34,753 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:26:35,933 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:29:03,737 - __main__ - INFO - Starting Flask application
2025-04-07 17:29:04,612 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:29:04,613 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:29:04,614 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:29:08,885 - __main__ - INFO - Starting Flask application
2025-04-07 17:29:08,891 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:29:08,900 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:29:13,531 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:29:14,010 - __main__ - INFO - Starting image classification
2025-04-07 17:29:14,010 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:29:16,151 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:29:22,447 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:29:24,099 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:29:28,325 - __main__ - INFO - Starting Flask application
2025-04-07 17:29:28,331 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:29:28,339 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:29:40,060 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:29:40,533 - __main__ - INFO - Starting image classification
2025-04-07 17:29:40,533 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:29:42,626 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:30:00,169 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:30:01,839 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:30:06,186 - __main__ - INFO - Starting Flask application
2025-04-07 17:30:06,193 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:30:06,201 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:30:11,435 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:30:12,542 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:30:16,667 - __main__ - INFO - Starting Flask application
2025-04-07 17:30:16,673 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:30:16,681 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:30:24,726 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:30:25,138 - __main__ - INFO - Starting image classification
2025-04-07 17:30:25,138 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:30:27,287 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:33:58,434 - __main__ - ERROR - Error during image classification: Java command failed : ['C:\\Program Files\\Java\\jdk-17\\bin\\java.exe', '-mx1000m', '-cp', 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\../allergen-detector\\stanford-ner-tagger\\stanford-ner.jar', 'edu.stanford.nlp.ie.crf.CRFClassifier', '-loadClassifier', 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\../allergen-detector\\stanford-ner-tagger\\classifiers\\ingredient-ner-model.ser.gz', '-textFile', 'C:\\Users\\kaleb\\AppData\\Local\\Temp\\tmp30hhbih3', '-outputFormat', 'slashTags', '-tokenizerFactory', 'edu.stanford.nlp.process.WhitespaceTokenizer', '-tokenizerOptions', '"tokenizeNLs=false"', '-encoding', 'utf8']
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 113, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 29, in GetIngredients
    tag_lst = ner_tagger.tag(words)
              ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tag\stanford.py", line 90, in tag
    return sum(self.tag_sents([tokens]), [])
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\tag\stanford.py", line 112, in tag_sents
    stanpos_output, _stderr = java(
                              ^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\internals.py", line 148, in java
    raise OSError("Java command failed : " + str(cmd))
OSError: Java command failed : ['C:\\Program Files\\Java\\jdk-17\\bin\\java.exe', '-mx1000m', '-cp', 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\../allergen-detector\\stanford-ner-tagger\\stanford-ner.jar', 'edu.stanford.nlp.ie.crf.CRFClassifier', '-loadClassifier', 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\../allergen-detector\\stanford-ner-tagger\\classifiers\\ingredient-ner-model.ser.gz', '-textFile', 'C:\\Users\\kaleb\\AppData\\Local\\Temp\\tmp30hhbih3', '-outputFormat', 'slashTags', '-tokenizerFactory', 'edu.stanford.nlp.process.WhitespaceTokenizer', '-tokenizerOptions', '"tokenizeNLs=false"', '-encoding', 'utf8']
2025-04-07 17:33:58,465 - __main__ - INFO - Response: 500
2025-04-07 17:33:58,467 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:33:58] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:35:02,958 - __main__ - INFO - Starting Flask application
2025-04-07 17:35:03,836 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:35:03,836 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:35:03,838 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:35:08,178 - __main__ - INFO - Starting Flask application
2025-04-07 17:35:08,186 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:35:08,197 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:35:15,809 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:35:16,252 - __main__ - INFO - Starting image classification
2025-04-07 17:35:16,252 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:35:18,369 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:37:09,718 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:37:11,423 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:37:22,987 - __main__ - INFO - Starting Flask application
2025-04-07 17:37:23,869 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:37:23,869 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:37:23,870 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:37:27,938 - __main__ - INFO - Starting Flask application
2025-04-07 17:37:27,944 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:37:27,953 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:37:32,535 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:37:32,953 - __main__ - INFO - Starting image classification
2025-04-07 17:37:32,953 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:37:35,073 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:37:35,907 - __main__ - INFO - Retrieved ingredients: ['white wine', 'cold unsalted butter', 'full-fat Greek yogurt', 'shredded coconut', 'kosher salt', 'ground cinnamon', 'baking soda, divided', 'unbleached cane sugar, or as needed', 'sifted all-purpose flour', 'brandy extract', 'canola oil', 'ground ginger (Optional)', 'white chocolate chips, or more to taste', 'creme de menthe candy flavoring (such as Wilton), or as needed', 'cashew butter', "confectioners' sugar, or more as needed", 'all-purpose flour, plus more as needed', 'margarine, at room temperature', 'powdered chocolate drink mix (such as Nesquik)', 'eggs, at room temperature', 'red sugar sprinkles, or as desired', 'coconut sugar', 'sweetened flaked coconut', 'anise seeds', 'hot, brewed coffee', 'butter, softened', 'cornflakes', 'Dutch process cocoa powder', 'chocolate sandwich cookies with cream filling', 'milk chocolate candy kisses, unwrapped', 'brown sugar, firmly packed', 'non-dairy margarine', 'cocoa nibs', 'grapeseed oil', 'McCormick Ground Cinnamon', 'cornstarch', 'creamy peanut butter', 'butter-flavored shortening (such as Crisco)', 'cream cheese flavored frosting (such as Betty Crocker Rich and Creamy)', 'whole-wheat flour', 'rum extract', 'gluten-free baking powder', 'multicolored candy sprinkles', 'white sugar, or as needed', 'chocolate cake mix', 'granulated sugar', 'sesame seeds', 'sea salt to taste', 'freshly grated ginger', 'finely ground almond flour', 'buttery round crackers (such as Ritz)', 'cream of tartar', 'rum extract, or more to taste', 'crispy rice cereal', 'unsalted peanuts', 'chai tea mix', 'chopped walnuts, or to taste (Optional)', 'raspberry jam, or as needed', 'pie crust', "confectioners' sugar for decoration", "white confectioners' coating (such as CANDIQUIK), or as needed", 'chopped walnuts, divided', 'unsalted butter, melted and cooled', 'heavy whipping cream, more as needed', 'limes, zested', 'unsalted butter at room temperature', 'instant oatmeal, or more as needed', 'chopped pecans', 'graham crackers, finely crushed', 'tapioca starch', 'white sugar, for sprinkling', 'vegan chocolate chips (Optional)', 'finely chopped almonds (Optional)', 'maple syrup', 'mashed cooked sweet potato', 'almond meal', 'ground cloves (Optional)', 'salt (Optional)', 'pistachio nuts', 'caramel ice cream topping', 'colored sugar', 'buckwheat flour', 'chopped dark chocolate', 'cold water', "red candy-coated chocolate pieces (such as M&M's)", 'egg, lightly beaten', 'frozen raspberries', 'firmly packed light brown sugar', 'ground allspice (Optional)', 'sesame seeds (optional)', 'white chocolate chips', 'vegetable shortening (such as Butter Flavor Crisco)', 'quick-cooking rolled oats', 'peanut butter chips', 'vanilla powder', 'agave nectar', 'whipped topping (such as Cool Whip)', 'cooking spray', 'McCormick Pure Vanilla Extract', 'brown rice flour', 'cake flour', 'gluten-free chocolate chips', 'pecans', 'ground nutmeg', 'rainbow sprinkles as needed', 'chocolate-covered caramel candies, unwrapped', "cinnamon chips (such as Hershey's)", 'dark chocolate chips (such as Ghirardelli 60% Cacao)', 'custard powder', 'semisweet chocolate chips', 'marshmallow cream (such as Marshmallow Fluff)', 'old fashioned oats', 'semisweet chocolate chips (such as Nestl Toll House)', 'chocolate frosting', 'light corn syrup', 'cider vinegar', 'raisins, or to taste (Optional)', 'gg white', 'finely crushed chocolate or regular graham crackers (about 9 sheets)', 'sesame seeds, toasted', 'granulated sugar for decoration', 'chocolate fudge cake mix with pudding (such as Betty Crocker Triple Chocolate Fudge cake mix)', 'chopped dried pineapple', 'baking cocoa', 'crushed lavender', 'rye flour', 'red decorator sugar', 'fresh lemon juice', 'high-quality unsweetened cocoa powder', 'dark chocolate chips, divided', 'unsweetened cocoa', 'fresh ginger, grated', 'toffee chips', 'unsifted powdered sugar', 'strawberry cake mix', 'chunky peanut butter', 'dark chocolate bar, chopped into chunks (about 1 cup chunks)', 'melted butter', 'eggs, lightly beaten', 'packed brown sugar', "candy-coated milk chocolate pieces (such as M&M's)", 'butter', 'old-fashioned rolled oats', 'egg white, stiffly beaten', 'graham cracker crumbs', "confectioners' sugar, for dusting", 'chopped almonds (Optional)', 'granular sucralose sweetener (such as Splenda)', 'white sugar', 'mixed nuts', 'powdered sugar, or as needed', 'golden syrup', 'butter flavored shortening', 'shortening, melted and cooled slightly', 'brown sugar, packed', 'blue food coloring, or as needed', 'cold cream cheese', 'reduced fat margarine', 'candy-coated milk chocolate pieces', 'solid coconut oil', 'all-purpose flour, or as needed', 'apple pie filling', 'roughly chopped almonds', 'lime zest, or to taste', 'white sugar, or more to taste', 'strawberry reduction', 'chocolate chips (such as Enjoy Life)', "confectioner's sugar", 'dark chocolate and mint chips (such as Nestle Toll House Dark Chocolate and Mint Morsels)', 'egg yolk, lightly beaten', 'cream cheese frosting', 'cayenne pepper', 'softened unsalted butter, divided', 'green belt candy strips', 'unsweetened applesauce', 'confectioners sugar', 'ground flax seeds', 'large eggs', '65% dark chocolate, chopped', 'all-purpose flour, or more if needed', 'chopped almonds', 'oat flour', 'colored decorating sugar, or as needed (Optional)', 'large egg', 'semisweet chocolate, broken into small pieces', 'red gel food coloring (Optional)', 'half and half', 'freshly grated nutmeg', 'butter flavored extract', 'chocolate coating wafers, melted', 'canned pumpkin puree', 'creamy or chunky peanut butter', 'blackberries', 'egg, beaten', 'unsweetened cocoa powder', 'McCormick Ground Nutmeg', 'hemp seed hearts', 'chopped dried cranberries, or to taste', 'speculoos cookie butter, such as Biscoff', 'firmly packed brown sugar', 'shelled pistachio nuts', 'semisweet chocolate, chopped', 'rainbow sprinkles', 'milk chocolate candy bar, chopped', 'soy flour', 'all-purpose flour', 'gluten-free graham cracker crumbs', 'semi-sweet chocolate chips', 'peanut butter, or as needed', 'sweetened condensed milk', 'jumbo semisweet chocolate chips', 'bourbon', 'root beer concentrate', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'mini candy eyeballs', 'sea salt', 'e', 'raisins (Optional)', 'dulce de leche', 'vanilla extract, or more to taste', 'instant white chocolate pudding mix', 'sour cream', 'frozen whole strawberries', 'unsulfured molasses', 'egg,', 'Mexican vanilla extract', 'chopped candied fruit', 'shortening', 'unsalted butter', 'marshmallows', 'green food coloring', 'ground nutmeg, or as needed', 'sliced almonds', 'frozen whipped topping (such as Cool Whip), thawed', 'semisweet baking chocolate', 'vanilla extract', 'eggs, beaten', 'chocolate sandwich cookies (such as Oreo), divided', 'McCormick Ground Ginger', 'apple juice', 'raisins', 'mini chocolate chips', 'crushed cornflakes cereal', 'chocolate chips, or to taste', 'toffee baking bits', 'olive oil', 'vanilla protein powder', 'caramel sauce', 'eggs, separated, divided', 'quick-cooking oats', 'chocolate curls or chocolate sprinkles', 'espresso powder', 'unsweetened chocolate, chopped', 'graham crackers', 'quick oats', 'chopped walnuts (Optional)', 'bread flour', 'egg yolk', 'loose-leaf tea, or more to taste', 'pecans, chopped', 'powdered sugar', "confectioners' sugar, sifted", 'warm coffee', 'vanilla bean, split and seeds scraped away', 'lemon curd', 'chocolate chips, or to taste (Optional)', 'cottage cheese', 'vegetable oil for frying', 'butter, melted', 'miniature chocolate covered peanut butter cups, unwrapped', 'colored sugar for decoration', 'all-purpose flour, plus more for rolling', 'peppermint candy canes, crushed', 'mashed banana', 'pecan halves', 'chopped salted pretzels', 'light brown sugar', 'chocolate chips', 'potato flour', 'semisweet chocolate', 'turbinado sugar (such as Sugar in the Raw)', 'vinegar', 'salted butter,', 'strawberries,', 'chopped walnuts', 'whole wheat flour', 'lime juice', 'almond extract', 'German chocolate cake mix', 'beaten egg', 'buttermilk', 'butter at room temperature', 'instant hot chocolate mix', 'rolled refrigerated unbaked pie crusts (2 crusts)', 'old-fashioned oats', 'chai concentrate', "confectioners' sugar, or as needed", 'light olive oil', 'regular rolled oats', 'crunchy peanut butter', 'solid-pack pumpkin puree', 'dark molasses', 'chocolate sandwich cookies (such as Oreo)', 'peppermint extract', 'finely chopped crystallized ginger', 'molasses', 'almond butter', 'multicolored candy sprinkles (Optional)', 'lemon zest', 'almonds', 'ground allspice', 'cookie butter (such as Biscoff)', 'unbleached all-purpose flour', 'Dutch-process cocoa powder', 'bittersweet chocolate', 'almond milk', 'skim milk', 'crisp rice cereal', 'egg, divided', 'white cake mix', 'coconut oil, at room temperature', 'nonfat dry milk powder', 'hot water', 'slivered almonds', 'oats', 'cream cheese, at room temperature', 'gluten-free all-purpose flour', 'natural peanut butter', 'cinnamon sugar', 'butter, softened, divided', 'green food coloring, or as needed', 'lukewarm water', 'dairy-free margarine, softened', 'ice water', 'butter or margarine, softened', 'white sugar, or to taste, divided', 'cold, brewed coffee', 'fruit jam, divided', 'packed dark brown sugar', 'warm water', 'all-purpose flour, sifted', 'dark corn syrup', 'frozen whipped dessert topping, thawed', 'salted butter', 'firmly packed dark brown sugar', 'lemon, zested', 'individually wrapped caramels, unwrapped', 'espresso powder (optional)', 'butter, melted and cooled', 'honey (Optional)', "white confectioners' coating, cut into pieces", 'dry milk powder', 'crushed chocolate sandwich cookies (such as Oreo)', 'cold butter', 'dark brown sugar', 'water, as needed', 'egg', 'pretzels, divided', 'wheat bran', 'lemon juice', 'whiskey', 'packed light brown sugar', 'bittersweet chocolate, chopped', 'pretzels, crushed', 'peanut butter', 'chia seeds', 'apricot preserves', 'applesauce', 'green sugar crystals', 'milk chocolate chips, divided', "brewers' yeast", 'grated orange peel', 'molasses (not blackstrap)', 'dried cranberries', 'ground cinnamon, divided', 'ground cinnamon, or to taste', 'unbleached cane sugar', 'egg whites', 'pineapple juice', 'nonstick cooking spray', 'salt, divided', 'orange juice', 'flaky sea salt for garnish', 'yellow cake mix', 'roasted peanuts, chopped', 'buttery round crackers', 'vanilla butter and nut flavoring', 'chocolate almond bark, broken into pieces', 'blackstrap molasses', 'dry pancake mix', 'sugar', 'vegetable shortening', 'whipped cream,', 'lemon extract', 'unsweetened Dutch-process cocoa powder', 'superfine sugar', 'sweetened flaked coconut (Optional)', 'jam', 'natural creamy peanut butter', 'rolled oats', 'chopped orange slices candy', 'instant espresso powder', 'chocolate-covered caramel candies (such as Rolo)', 'chopped candy bars, or more to taste', 'candied cherries, halved', 'ground cardamom', 'anise seed', 'coconut milk', 'egg white', 'pitted dates, chopped', 'colored candy sprinkles (Optional)', 'palm shortening', 'butter, room temperature', 'seedless raspberry jam', 'egg yolks, at room temperature', 'green lentils, drained and rinsed', 'toasted chopped walnuts (Optional)', 'gluten-free vanilla extract', 'finely ground walnuts', 'candied cherries', 'sunflower seeds', 'refrigerated sugar cookie dough', 'chili powder', 'stevia sweetener (such as Truvia)', 'finely chopped nuts', 'rice flour', 'gluten-free oat flour', 'milk', 'freeze-dried strawberries (or as needed)', 'unsalted butter, melted', 'chopped pitted dates', 'ground cloves', 'rolled oats, or as needed', 'whole anise seeds', 'plain nonfat yogurt', 'mashed avocado', 'powdered protein supplement', 'dates, pitted and finely chopped', 'semisweet chocolate chips (Optional)', 'baking mix (such as Bisquick )', 'mint extract', 'evaporated milk, divided', 'red velvet cake mix', 'unsweetened baking chocolate, broken into pieces', 'flour', 'milk chocolate', 'mini candy-coated chocolate pieces', 'water', 'low-fat (1%) milk', 'milk chocolate, chopped', 'low-calorie natural sweetener (such as Swerve)', 'vanilla sugar', 'ground black pepper (Optional)', 'pumpkin', 'xanthan gum', 'fruit preserves, any flavor', 'candied cherries, halved, or more as needed', 'vanilla bean', 'refrigerated crescent roll dough', 'egg white, beaten', 'milk, or more as needed', 'unsweetened shredded coconut', 'ground black pepper', 'spice cake mix', 'pumpkin puree', 'dates, pitted and chopped', 'walnuts, finely chopped', 'maraschino cherries, drained', 'flaked coconut', 'nutmeg', 'unsweetened triple chocolate baking cocoa', 'anise seed (Optional)', 'dark chocolate chips', 'salt', 'almond flour', 'lime zest', 'anise extract', 'white sugar for decoration', 'red food coloring or to taste', 'chocolate cookie crumbs', 'ground cloves, or to taste', "unwrapped caramel candies (such as Werther's), each cut into 6 pieces", 'salted butter, softened', "dark cocoa powder (such as Hershey's Special Dark)", 'baking mix', 'chocolate', 'eggs', 'miniature marshmallows', 'nonstick cooking spray with flour', 'unsweetened chocolate', 'egg, at room temperature', 'cocoa powder, sifted', 'cayenne pepper (Optional)', 'malted milk powder', 'ground cayenne pepper', 'dark chocolate chips, or as needed', 'cinnamon', 'honey', 'milk chocolate chips', 'dried apricots, quartered (Optional)', 'Medjool dates', 'mini semi-sweet chocolate chips', 'ground cardamom (Optional)', 'parchment paper', 'crushed walnuts', 'unsweetened dark cocoa powder', 'egg yolks, lightly beaten', 'brandy', 'chocolate-flavor candy coating, chopped', 'nonfat Greek yogurt', 'shortening (such as Crisco)', 'finely chopped walnuts', 'evaporated milk', 'European cookie spread (such as Biscoff)', "individually wrapped caramels (such as Hershey's), unwrapped", 'smooth peanut butter', 'coarse salt', 'ground cinnamon, or as desired', 'white chocolate, melted', 'margarine or butter', 'orange extract', 'gluten-free all-purpose baking flour (such as Pillsbury)', 'gluten-free rolled oats', 'black beans, rinsed well and drained', 'softened butter', 'brown sugar, divided', 'baking powder', 'baking soda', 'vegetable oil', 'rose extract', 'boiling water', 'flaky sea salt, for garnish', 'wheat germ', 'sweet rice flour', 'vanilla', 'cocoa powder', 'corn syrup', 'chopped dates', 'all-purpose flour, or more as needed', 'red candy melts (such as Wilton), or as needed', 'margarine, softened', 'fine sea salt', 'coconut extract', 'instant milk chocolate drink mix', "confectioners' sugar", 'devils food cake mix', 'powdered sugar, or more as needed', 'chopped raw pecans', 'red food coloring', 'gluten-free flour', 'canned pumpkin', 'vegan chocolate chips', 'poppyseed filling', 'marshmallow creme', 'marshmallow cream', 'coconut', 'eggs, well beaten', 'golden raisins', 'water, or as needed', 'heavy cream', 'butterscotch chips', 'almond or vanilla extract', 'gluten-free all-purpose baking flour (such as Hodgson Mill)', 'coconut flour', 'ground cinnamon, or as needed', 'sifted whole wheat flour', 'all-purpose flour, plus more for rolling out dough', 'pre-cut refrigerated chocolate chip cookie dough', 'white rice flour', 'finely chopped pecans', 'chocolate-coated caramel-peanut nougat candy (such as Snickers), chopped, divided', "milk chocolate candy kisses (such as Hershey's Kisses), or to taste", 'avocado, mashed', 'instant chocolate pudding mix', 'chocolate chips (such as Dagoba Chocodrops)', 'Hachiya persimmons, pulp extracted', 'margarine, melted', 'mint chocolate chips', 'unsulphured molasses', "devil's food cake mix", 'butterscotch chips, or to taste', 'graham crackers, crushed', 'white sugar, divided', 'vanilla gelato (optional)', 'gluten-free flour blend (such as Namaste Perfect Flour Blend)', 'sliced rhubarb, 1/4-inch wide', 'egg yolks, beaten', 'chocolate covered peanut butter cups, chopped', 'milk, or as needed', 'whole-wheat pastry flour', 'cornmeal', 'rum', 'canola oil for frying', 'dark chocolate, chopped', 'cornstarch, or more as needed', 'tightly packed dark brown sugar', 'tahini', 'unsweetened chocolate, melted', 'butter spread, melted', 'red sugar crystals', "sifted confectioners' sugar", 'flaxseed meal', 'apricot jam, or as needed', 'sugar sprinkles, or to taste', 'quick cooking oats', 'ground ginger, or to taste', 'cream cheese, softened', 'butter-flavored shortening', 'miniature semisweet chocolate chips', 'margarine', 'white sugar, divided, or as needed', 'chocolate almond bark (chocolate confectioners coating) (Optional)', 'sugar, divided', 'all purpose flour for dusting', 'ground cinnamon (Optional)', 'unsalted butter, cubed', 'raw unsalted sunflower seeds', 'eggs, separated', 'butter-flavored shortening (such as Crisco), melted', 'red food coloring (Optional)', 'pumpkin pie spice', 'finely chopped cranberries', 'unsalted butter, at room temperature', 'butter, or as needed', 'shredded coconut (Optional)', 'chocolate-hazelnut spread (such as Nutella)', 'chopped chocolate-covered toffee candy bars (such as Heath)', 'quick cooking oats (such as Quaker)', 'egg yolks', 'silver dragees decorating candy', 'instant pistachio pudding mix', 'frozen puff pastry, thawed', 'coconut oil', 'chopped white chocolate', 'instant vanilla pudding mix', 'chopped pecans, toasted', 'margarine (such as Smart Balance)', 'toasted oat cereal rings (such as Cheerios)', 'unsweetened coconut', 'blanched almond flour', 'brownie mix', 'chopped raw almonds', "confectioners' sugar for dusting", 'cherry pie filling', 'blanched slivered almonds, toasted', 'brown sugar', 'heavy whipping cream', 'chopped nuts', 'apple pie or ground cinnamon', 'long red vine licorice', 'low-calorie natural powdered sweetener (such as Swerve)', 'sweetened flaked coconut, divided', 'guava paste, or to taste', 'ground nutmeg, or to taste', 'half-and-half cream', 'whole milk', 'salted peanuts', 'ground ginger', 'sweetened coconut flakes', 'crushed salted potato chips', 'strawberry jam', 'fine salt', 'raspberry jam', 'chopped peanuts', 'butter, at room temperature', 'oranges, zested and juiced', 'matzo cake meal', 'coarsely chopped peppermint candy canes', 'unsalted butter, softened', 'grated orange zest', 'gluten-free all-purpose baking flour', 'sorghum flour', 'buttery cracker crumbs,', 'dry unsweetened shredded coconut', 'roughly chopped hazelnuts', 'all purpose flour', 'crushed candy canes', 'orange marmalade (Optional)', 'potato starch', 'chopped chocolate peppermint bark', 'cornflakes cereal', 'walnuts', 'cream cheese', 'unsalted butter, cold and cubed', 'persimmon pulp', 'milk chocolate candy bars', 'butter, cubed, at room temperature', 'sweetened coconut, divided', 'cream cheese, cut into pieces']
2025-04-07 17:41:43,843 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['nut allergy', 'oral allergy syndrome', 'stone fruit allergy', 'banana allergy', 'legume allergy', 'salicylate allergy', 'gluten allergy', 'milk allergy / lactose intolerance', 'canola oil allergy', 'coconut allergy', 'ochratoxin allergy', 'corn allergy', 'nightshade allergy', 'histamine allergy', 'honey allergy', 'persimmon allergy', 'citrus allergy', 'aquagenic urticaria', 'olive oil allergy', 'peanut allergy', 'mint allergy', 'potato allergy', 'pumpkin allergy', 'rice allergy', 'fish allergy', 'seed allergy', 'soy allergy', 'sugar allergy / intolerance', 'tannin allergy', 'thyroid']}
2025-04-07 17:41:43,843 - __main__ - INFO - Image classification completed in 250.89 seconds
2025-04-07 17:41:43,844 - __main__ - INFO - Response: 200
2025-04-07 17:41:43,844 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:41:43] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:43:15,382 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:43:16,993 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:43:31,556 - __main__ - INFO - Starting Flask application
2025-04-07 17:43:32,446 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 17:43:32,446 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 17:43:32,448 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:43:36,547 - __main__ - INFO - Starting Flask application
2025-04-07 17:43:36,553 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:43:36,562 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:43:58,078 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:43:58,600 - __main__ - INFO - Starting image classification
2025-04-07 17:43:58,601 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:44:00,714 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:44:00,715 - __main__ - ERROR - Error during image classification: get_ingredients_by_category() takes 1 positional argument but 2 were given
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 103, in classify_image
    ingredients = get_ingredients_by_category(classification, json_file_path)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_ingredients_by_category() takes 1 positional argument but 2 were given
2025-04-07 17:44:00,715 - __main__ - INFO - Response: 500
2025-04-07 17:44:00,717 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:44:00] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:44:12,414 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:44:13,572 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:44:17,679 - __main__ - INFO - Starting Flask application
2025-04-07 17:44:17,679 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:44:17,694 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:44:22,853 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:44:23,332 - __main__ - INFO - Starting image classification
2025-04-07 17:44:23,332 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:44:25,440 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:44:25,624 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:44:46,799 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\data\\get_ingredients.py', reloading
2025-04-07 17:44:48,428 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:44:52,703 - __main__ - INFO - Starting Flask application
2025-04-07 17:44:52,709 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:44:52,717 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:45:25,732 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:45:26,745 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:45:30,869 - __main__ - INFO - Starting Flask application
2025-04-07 17:45:30,869 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:45:30,885 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:45:33,219 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:45:33,780 - __main__ - INFO - Starting image classification
2025-04-07 17:45:33,780 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:45:35,838 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:45:36,019 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:45:45,126 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:45:45,127 - __main__ - INFO - Image classification completed in 11.35 seconds
2025-04-07 17:45:45,127 - __main__ - INFO - Response: 200
2025-04-07 17:45:45,128 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:45:45] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:47:50,978 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:47:50,978 - __main__ - INFO - Starting image classification
2025-04-07 17:47:50,978 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:47:51,192 - __main__ - ERROR - Error during image classification: cannot identify image file './temp\\temp_classify.jpg'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 98, in classify_image
    confidence, classification = infer_image(file_path)
                                 ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../custom_model\classify.py", line 17, in infer_image
    img = Image.open(image_path)
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\PIL\Image.py", line 3532, in open
    raise UnidentifiedImageError(msg)
PIL.UnidentifiedImageError: cannot identify image file './temp\\temp_classify.jpg'
2025-04-07 17:47:51,194 - __main__ - INFO - Response: 500
2025-04-07 17:47:51,194 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:47:51] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:48:15,643 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:48:15,644 - __main__ - INFO - Starting image classification
2025-04-07 17:48:15,644 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:48:15,655 - __main__ - ERROR - Error during image classification: cannot identify image file './temp\\temp_classify.jpg'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 98, in classify_image
    confidence, classification = infer_image(file_path)
                                 ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../custom_model\classify.py", line 17, in infer_image
    img = Image.open(image_path)
          ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\PIL\Image.py", line 3532, in open
    raise UnidentifiedImageError(msg)
PIL.UnidentifiedImageError: cannot identify image file './temp\\temp_classify.jpg'
2025-04-07 17:48:15,656 - __main__ - INFO - Response: 500
2025-04-07 17:48:15,657 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:48:15] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:48:38,809 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:48:39,274 - __main__ - INFO - Starting image classification
2025-04-07 17:48:39,274 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:48:40,347 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:48:40,556 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:48:45,836 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:48:46,330 - __main__ - INFO - Starting image classification
2025-04-07 17:48:46,330 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:48:47,531 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:48:47,715 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:48:48,131 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:48:48,131 - __main__ - INFO - Image classification completed in 8.86 seconds
2025-04-07 17:48:48,131 - __main__ - INFO - Response: 200
2025-04-07 17:48:48,131 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:48:48] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:48:54,875 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:48:54,875 - __main__ - INFO - Image classification completed in 8.54 seconds
2025-04-07 17:48:54,876 - __main__ - INFO - Response: 200
2025-04-07 17:48:54,877 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:48:54] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:49:35,349 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:49:35,617 - __main__ - INFO - Starting image classification
2025-04-07 17:49:35,617 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:49:36,632 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:49:36,846 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:49:43,944 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:49:43,944 - __main__ - INFO - Image classification completed in 8.33 seconds
2025-04-07 17:49:43,944 - __main__ - INFO - Response: 200
2025-04-07 17:49:43,944 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:49:43] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:49:57,951 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:49:59,480 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:50:03,767 - __main__ - INFO - Starting Flask application
2025-04-07 17:50:03,773 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:50:03,782 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:50:07,668 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:50:07,962 - __main__ - INFO - Starting image classification
2025-04-07 17:50:07,962 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:50:10,016 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:50:10,190 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:50:19,221 - __main__ - ERROR - Error during image classification: 'recipe_name'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 111, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 83, in ProcessRecipe
    return {"recipe_name": recipe["recipe_name"], "allergies": allergies}
                           ~~~~~~^^^^^^^^^^^^^^^
KeyError: 'recipe_name'
2025-04-07 17:50:19,222 - __main__ - INFO - Response: 500
2025-04-07 17:50:19,222 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:50:19] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:51:36,718 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:51:38,157 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:51:42,527 - __main__ - INFO - Starting Flask application
2025-04-07 17:51:42,533 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:51:42,542 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:51:48,901 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:51:49,969 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:51:54,208 - __main__ - INFO - Starting Flask application
2025-04-07 17:51:54,214 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:51:54,222 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:52:29,357 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:52:29,624 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:52:29,714 - __main__ - INFO - Starting image classification
2025-04-07 17:52:29,714 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:52:29,824 - __main__ - INFO - Starting image classification
2025-04-07 17:52:29,824 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:52:31,930 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:52:32,138 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:52:32,212 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:52:32,430 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:52:36,563 - __main__ - ERROR - Error during image classification: 'WordNetCorpusReader' object has no attribute '_LazyCorpusLoader__args'
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 111, in classify_image
    allergens = ProcessRecipe(
                ^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 66, in ProcessRecipe
    ingredients = GetIngredients(ner_tagger, recipe["ingredients"])
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\../allergen-detector\test_model.py", line 33, in GetIngredients
    lemmatizer.lemmatize(tag[0], pos="n")
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\stem\wordnet.py", line 85, in lemmatize
    lemmas = self._morphy(word, pos)
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\stem\wordnet.py", line 41, in _morphy
    return wn._morphy(form, pos, check_exceptions)
           ^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\corpus\util.py", line 120, in __getattr__
    self.__load()
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\nltk\corpus\util.py", line 95, in __load
    args, kwargs = self.__args, self.__kwargs
                   ^^^^^^^^^^^
AttributeError: 'WordNetCorpusReader' object has no attribute '_LazyCorpusLoader__args'
2025-04-07 17:52:36,592 - __main__ - INFO - Response: 500
2025-04-07 17:52:36,592 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:52:36] "[35m[1mPOST /classify-image HTTP/1.1[0m" 500 -
2025-04-07 17:52:42,956 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:52:42,956 - __main__ - INFO - Image classification completed in 13.24 seconds
2025-04-07 17:52:42,956 - __main__ - INFO - Response: 200
2025-04-07 17:52:42,956 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:52:42] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:52:50,349 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:52:50,650 - __main__ - INFO - Starting image classification
2025-04-07 17:52:50,650 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:52:51,711 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:52:51,907 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:52:59,398 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:52:59,398 - __main__ - INFO - Image classification completed in 8.75 seconds
2025-04-07 17:52:59,398 - __main__ - INFO - Response: 200
2025-04-07 17:52:59,398 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:52:59] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:53:31,802 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:53:32,094 - __main__ - INFO - Starting image classification
2025-04-07 17:53:32,094 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:53:33,158 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:53:33,350 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:53:40,736 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:53:40,736 - __main__ - INFO - Image classification completed in 8.64 seconds
2025-04-07 17:53:40,737 - __main__ - INFO - Response: 200
2025-04-07 17:53:40,737 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:53:40] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:54:17,249 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:54:18,740 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:54:23,034 - __main__ - INFO - Starting Flask application
2025-04-07 17:54:23,040 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:54:23,048 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 17:54:23,263 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:54:23,269 - __main__ - INFO - Starting image classification
2025-04-07 17:54:23,269 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:54:25,426 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:54:25,609 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:54:34,923 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:54:34,923 - __main__ - INFO - Image classification completed in 11.65 seconds
2025-04-07 17:54:34,923 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:54:34,924 - __main__ - INFO - Response: 200
2025-04-07 17:54:34,925 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:54:34] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:55:19,464 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:55:19,742 - __main__ - INFO - Starting image classification
2025-04-07 17:55:19,742 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:55:20,824 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:55:21,005 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:55:24,032 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:55:24,314 - __main__ - INFO - Starting image classification
2025-04-07 17:55:24,314 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:55:25,522 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:55:25,734 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:55:28,828 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:55:28,828 - __main__ - INFO - Image classification completed in 9.09 seconds
2025-04-07 17:55:28,829 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:55:28,829 - __main__ - INFO - Response: 200
2025-04-07 17:55:28,830 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:55:28] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:55:33,408 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:55:33,408 - __main__ - INFO - Image classification completed in 9.09 seconds
2025-04-07 17:55:33,408 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:55:33,408 - __main__ - INFO - Response: 200
2025-04-07 17:55:33,408 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:55:33] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:56:18,618 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:56:18,913 - __main__ - INFO - Starting image classification
2025-04-07 17:56:18,913 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:56:19,998 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:56:20,203 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:56:22,413 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:56:22,715 - __main__ - INFO - Starting image classification
2025-04-07 17:56:22,715 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:56:23,904 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:56:24,088 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:56:28,239 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:56:28,239 - __main__ - INFO - Image classification completed in 9.33 seconds
2025-04-07 17:56:28,239 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:56:28,240 - __main__ - INFO - Response: 200
2025-04-07 17:56:28,240 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:56:28] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:56:31,863 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:56:31,864 - __main__ - INFO - Image classification completed in 9.15 seconds
2025-04-07 17:56:31,864 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:56:31,865 - __main__ - INFO - Response: 200
2025-04-07 17:56:31,865 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:56:31] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:57:11,667 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:57:11,962 - __main__ - INFO - Starting image classification
2025-04-07 17:57:11,962 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:57:13,050 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:57:13,256 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:57:14,051 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:57:14,408 - __main__ - INFO - Starting image classification
2025-04-07 17:57:14,408 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:57:15,634 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:57:15,825 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:57:21,503 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:57:21,503 - __main__ - INFO - Image classification completed in 9.54 seconds
2025-04-07 17:57:21,503 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:57:21,503 - __main__ - INFO - Response: 200
2025-04-07 17:57:21,503 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:57:21] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:57:23,871 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:57:23,871 - __main__ - INFO - Image classification completed in 9.46 seconds
2025-04-07 17:57:23,871 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:57:23,871 - __main__ - INFO - Response: 200
2025-04-07 17:57:23,871 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:57:23] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:57:32,177 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:57:32,473 - __main__ - INFO - Starting image classification
2025-04-07 17:57:32,473 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:57:33,556 - __main__ - INFO - Image classified as: cookies
2025-04-07 17:57:33,778 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 17:57:41,034 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 17:57:41,034 - __main__ - INFO - Image classification completed in 8.56 seconds
2025-04-07 17:57:41,034 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'confidence': 0.053748976439237595, 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 17:57:41,035 - __main__ - INFO - Response: 200
2025-04-07 17:57:41,036 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:57:41] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:58:16,276 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:58:16,942 - __main__ - INFO - Starting image classification
2025-04-07 17:58:16,942 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:58:18,088 - __main__ - INFO - Image classified as: yeast bread recipes
2025-04-07 17:58:18,322 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'active dry yeast', 'salt', 'all-purpose flour', 'water', 'warm water (110 degrees F/45 degrees C)', 'bread flour', 'warm water', 'egg', 'milk', 'vegetable oil', 'eggs', 'olive oil', 'butter, melted', 'honey', 'whole wheat flour', 'butter', 'butter, softened', 'kosher salt', 'egg, beaten', 'ground cinnamon', 'egg yolk', 'instant yeast', 'extra-virgin olive oil', 'ground nutmeg', 'cold water', 'cooking spray', 'vanilla extract', 'ground cardamom', 'brown sugar', 'cornmeal', 'warm milk', 'raisins', 'all-purpose flour, divided', 'all-purpose flour, or as needed', 'baking powder', 'all-purpose flour, or more as needed', 'sourdough starter', 'lukewarm milk', 'baking soda', 'bread flour, divided, or as needed', 'fine salt', 'melted butter', 'sugar', 'eggs, beaten', 'egg yolks', 'sour cream', 'cornmeal for dusting', 'extra-virgin olive oil, divided', 'olive oil, divided', 'white sugar, divided', 'grated Parmesan cheese', 'unsalted butter, melted', 'lemon zest', 'unbleached all-purpose flour', 'hot water', 'yeast', 'dried currants', 'grated orange zest', 'bread machine yeast', 'water, divided', 'fine sea salt', 'ground black pepper', 'Italian seasoning', 'self-rising flour', 'whole milk', 'packed brown sugar', 'canola oil', 'unsalted butter, melted, divided', 'unbleached bread flour', 'buckwheat flour', 'canned pumpkin', 'salt, or more to taste', 'lukewarm water', 'white sugar, or as needed', 'pumpkin puree', 'warm milk (110 degrees F/45 degrees C)', 'ground allspice', 'rapid rise yeast', 'all-purpose flour, divided, or as needed', 'minced garlic', 'corn oil', 'shortening', 'chopped fresh rosemary', 'very warm water', "confectioners' sugar", 'egg, at room temperature', 'sourdough starter discard']
2025-04-07 17:58:25,744 - __main__ - INFO - Allergens detected: {'recipe_name': 'yeast bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'honey allergy', 'aquagenic urticaria', 'olive oil allergy', 'sugar allergy / intolerance', 'gluten allergy']}
2025-04-07 17:58:25,744 - __main__ - INFO - Image classification completed in 8.80 seconds
2025-04-07 17:58:25,744 - __main__ - INFO - Returning classification result: {'classification': 'yeast bread recipes', 'confidence': 0.30481815338134766, 'ingredients': ['white sugar', 'active dry yeast', 'salt', 'all-purpose flour', 'water', 'warm water (110 degrees F/45 degrees C)', 'bread flour', 'warm water', 'egg', 'milk', 'vegetable oil', 'eggs', 'olive oil', 'butter, melted', 'honey', 'whole wheat flour', 'butter', 'butter, softened', 'kosher salt', 'egg, beaten'], 'allergens': {'recipe_name': 'yeast bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'honey allergy', 'aquagenic urticaria', 'olive oil allergy', 'sugar allergy / intolerance', 'gluten allergy']}}
2025-04-07 17:58:25,744 - __main__ - INFO - Response: 200
2025-04-07 17:58:25,744 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:58:25] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:59:18,708 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 17:59:19,325 - __main__ - INFO - Starting image classification
2025-04-07 17:59:19,325 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 17:59:20,467 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 17:59:20,670 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 17:59:27,929 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 17:59:27,929 - __main__ - INFO - Image classification completed in 8.60 seconds
2025-04-07 17:59:27,929 - __main__ - INFO - Returning classification result: {'classification': 'quick bread recipes', 'confidence': 0.18319839239120483, 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 17:59:27,930 - __main__ - INFO - Response: 200
2025-04-07 17:59:27,931 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 17:59:27] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 17:59:39,431 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 17:59:41,073 - werkzeug - INFO -  * Restarting with stat
2025-04-07 17:59:45,763 - __main__ - INFO - Starting Flask application
2025-04-07 17:59:45,769 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 17:59:45,779 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:01:23,652 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:01:24,944 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:10:15,984 - __main__ - INFO - Starting Flask application
2025-04-07 18:10:16,858 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.5.63:5001
2025-04-07 18:10:16,858 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-07 18:10:16,858 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:10:21,025 - __main__ - INFO - Starting Flask application
2025-04-07 18:10:21,040 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:10:21,048 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:10:43,481 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:10:44,130 - __main__ - INFO - Starting image classification
2025-04-07 18:10:44,131 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:10:46,351 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:10:46,532 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:10:56,019 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:10:56,019 - __main__ - INFO - Image classification completed in 11.89 seconds
2025-04-07 18:10:56,020 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:10:56,020 - __main__ - INFO - Response: 200
2025-04-07 18:10:56,021 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:10:56] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:12:33,786 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:12:34,381 - __main__ - INFO - Starting image classification
2025-04-07 18:12:34,382 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:12:35,488 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:12:35,711 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:12:42,922 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:12:42,922 - __main__ - INFO - Image classification completed in 8.54 seconds
2025-04-07 18:12:42,922 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:12:42,924 - __main__ - INFO - Response: 200
2025-04-07 18:12:42,925 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:12:42] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:12:44,167 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:12:44,806 - __main__ - INFO - Starting image classification
2025-04-07 18:12:44,806 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:12:45,926 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:12:46,140 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:12:50,282 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:12:50,882 - __main__ - INFO - Starting image classification
2025-04-07 18:12:50,883 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:12:52,182 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:12:52,364 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:12:54,020 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:12:54,020 - __main__ - INFO - Image classification completed in 9.21 seconds
2025-04-07 18:12:54,021 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:12:54,021 - __main__ - INFO - Response: 200
2025-04-07 18:12:54,022 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:12:54] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:12:59,950 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:12:59,951 - __main__ - INFO - Image classification completed in 9.07 seconds
2025-04-07 18:12:59,951 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:12:59,952 - __main__ - INFO - Response: 200
2025-04-07 18:12:59,953 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:12:59] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:13:17,240 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/cookies
2025-04-07 18:13:17,241 - __main__ - ERROR - Unhandled exception: 400 Bad Request: Failed to decode JSON object: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 611, in get_json
    rv = self.json_module.loads(data)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\json\provider.py", line 187, in loads
    return json.loads(s, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\decoder.py", line 338, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\decoder.py", line 356, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 915, in full_dispatch_request
    rv = self.preprocess_request()
         ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 1291, in preprocess_request
    rv = self.ensure_sync(before_func)()
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 60, in log_request_info
    logger.debug(f"Request JSON: {request.get_json()}")
                                  ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 620, in get_json
    rv = self.on_json_loading_failed(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\wrappers.py", line 214, in on_json_loading_failed
    return super().on_json_loading_failed(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 645, in on_json_loading_failed
    raise BadRequest(f"Failed to decode JSON object: {e}")
werkzeug.exceptions.BadRequest: 400 Bad Request: Failed to decode JSON object: Expecting value: line 1 column 1 (char 0)
2025-04-07 18:13:17,256 - __main__ - INFO - Response: 500
2025-04-07 18:13:17,256 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:13:17] "[35m[1mGET /get-classification/cookies HTTP/1.1[0m" 500 -
2025-04-07 18:14:45,780 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:14:46,561 - __main__ - INFO - Starting image classification
2025-04-07 18:14:46,561 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:14:47,691 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:14:47,913 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:14:56,250 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:14:56,250 - __main__ - INFO - Image classification completed in 9.69 seconds
2025-04-07 18:14:56,250 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:14:56,250 - __main__ - INFO - Response: 200
2025-04-07 18:14:56,256 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:14:56] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:14:58,484 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/cookies
2025-04-07 18:14:58,484 - __main__ - ERROR - Unhandled exception: 400 Bad Request: Failed to decode JSON object: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 611, in get_json
    rv = self.json_module.loads(data)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\json\provider.py", line 187, in loads
    return json.loads(s, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\decoder.py", line 338, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\decoder.py", line 356, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 915, in full_dispatch_request
    rv = self.preprocess_request()
         ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 1291, in preprocess_request
    rv = self.ensure_sync(before_func)()
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 60, in log_request_info
    logger.debug(f"Request JSON: {request.get_json()}")
                                  ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 620, in get_json
    rv = self.on_json_loading_failed(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\wrappers.py", line 214, in on_json_loading_failed
    return super().on_json_loading_failed(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 645, in on_json_loading_failed
    raise BadRequest(f"Failed to decode JSON object: {e}")
werkzeug.exceptions.BadRequest: 400 Bad Request: Failed to decode JSON object: Expecting value: line 1 column 1 (char 0)
2025-04-07 18:14:58,486 - __main__ - INFO - Response: 500
2025-04-07 18:14:58,486 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:14:58] "[35m[1mGET /get-classification/cookies HTTP/1.1[0m" 500 -
2025-04-07 18:15:15,485 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:15:16,104 - __main__ - INFO - Starting image classification
2025-04-07 18:15:16,104 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:15:17,145 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:15:17,337 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:15:24,587 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:15:24,587 - __main__ - INFO - Image classification completed in 8.48 seconds
2025-04-07 18:15:24,587 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:15:24,587 - __main__ - INFO - Response: 200
2025-04-07 18:15:24,587 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:15:24] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:15:30,494 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/cookies
2025-04-07 18:15:30,494 - __main__ - ERROR - Unhandled exception: 400 Bad Request: Failed to decode JSON object: Expecting value: line 1 column 1 (char 0)
Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 611, in get_json
    rv = self.json_module.loads(data)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\json\provider.py", line 187, in loads
    return json.loads(s, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\decoder.py", line 338, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2544.0_x64__qbz5n2kfra8p0\Lib\json\decoder.py", line 356, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 915, in full_dispatch_request
    rv = self.preprocess_request()
         ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\app.py", line 1291, in preprocess_request
    rv = self.ensure_sync(before_func)()
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\server.py", line 60, in log_request_info
    logger.debug(f"Request JSON: {request.get_json()}")
                                  ^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 620, in get_json
    rv = self.on_json_loading_failed(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\flask\wrappers.py", line 214, in on_json_loading_failed
    return super().on_json_loading_failed(e)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\kaleb\repos\School\senior-design\Qsine\backend-api\venv\Lib\site-packages\werkzeug\wrappers\request.py", line 645, in on_json_loading_failed
    raise BadRequest(f"Failed to decode JSON object: {e}")
werkzeug.exceptions.BadRequest: 400 Bad Request: Failed to decode JSON object: Expecting value: line 1 column 1 (char 0)
2025-04-07 18:15:30,508 - __main__ - INFO - Response: 500
2025-04-07 18:15:30,508 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:15:30] "[35m[1mGET /get-classification/cookies HTTP/1.1[0m" 500 -
2025-04-07 18:18:07,829 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:18:09,247 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:18:13,641 - __main__ - INFO - Starting Flask application
2025-04-07 18:18:13,644 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:18:13,656 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:18:19,256 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:18:20,601 - __main__ - INFO - Starting image classification
2025-04-07 18:18:20,601 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:18:22,766 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:18:22,944 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:18:32,120 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:18:32,120 - __main__ - INFO - Image classification completed in 11.52 seconds
2025-04-07 18:18:32,120 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:18:32,121 - __main__ - INFO - Response: 200
2025-04-07 18:18:32,122 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:18:32] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:18:35,116 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/cookies
2025-04-07 18:18:35,265 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 18:18:42,415 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:18:42,415 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:18:42,415 - __main__ - INFO - Response: 200
2025-04-07 18:18:42,415 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:18:42] "GET /get-classification/cookies HTTP/1.1" 200 -
2025-04-07 18:18:47,009 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/quick%20bread%20recipes
2025-04-07 18:18:47,165 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:18:54,491 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:18:54,491 - __main__ - INFO - Returning classification result: {'classification': 'quick bread recipes', 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:18:54,492 - __main__ - INFO - Response: 200
2025-04-07 18:18:54,492 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:18:54] "GET /get-classification/quick%20bread%20recipes HTTP/1.1" 200 -
2025-04-07 18:19:11,452 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:19:12,057 - __main__ - INFO - Starting image classification
2025-04-07 18:19:12,057 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:19:13,110 - __main__ - INFO - Image classified as: quick bread recipes
2025-04-07 18:19:13,313 - __main__ - INFO - Retrieved ingredients: ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts', 'whole wheat flour', 'ground ginger', 'cornmeal', 'pumpkin pie spice', 'eggs, beaten', 'cooking spray', 'raisins', 'packed brown sugar', 'butter, softened', 'orange juice', 'sour cream', 'eggs, lightly beaten', 'unsalted butter, melted', "confectioners' sugar", 'melted butter', 'shortening', 'canned pumpkin', 'self-rising flour', 'grated zucchini', 'honey', 'maple syrup', 'ground allspice', 'applesauce', 'yellow cornmeal', 'sea salt', 'cream of tartar', 'rolled oats', 'large eggs', 'unsalted butter', 'lemon juice', 'kosher salt', 'sugar', 'canola oil', 'egg, beaten', 'cinnamon', 'shredded zucchini', 'canned pumpkin puree', 'chocolate chips', 'lemon zest', 'light brown sugar', 'chopped walnuts (Optional)', 'fresh blueberries', 'shredded Cheddar cheese', 'unsweetened applesauce', 'dried cranberries', 'heavy cream', 'whole milk', 'margarine, melted', 'unsalted butter, frozen', 'fresh cranberries', 'grated orange zest', 'half-and-half cream', 'pumpkin pure', 'almond extract', 'egg, lightly beaten', 'lemon extract', 'flour', 'half-and-half', 'semisweet chocolate chips', 'chopped pecans', 'eggs, at room temperature', 'heavy whipping cream', 'garlic powder', 'olive oil', 'cream-style corn', 'milk, or as needed', 'whole wheat pastry flour', 'butter, chilled', 'ground cardamom', 'orange zest', 'chopped cranberries', 'ground black pepper', 'egg whites', 'unbleached all-purpose flour', 'dried parsley', 'water, or as needed', 'molasses', 'grated unpeeled zucchini', 'refrigerated biscuit dough', 'shredded sharp Cheddar cheese', 'butter or margarine', 'fresh orange juice', 'butter, cut into 6 pieces', 'cold butter, cut into pieces', 'vinegar', 'ground cinnamon, or to taste', 'miniature semisweet chocolate chips', 'Irish cream liqueur (such as Baileys)', 'cold buttermilk', 'butter, at room temperature', 'peeled, pitted, and chopped peaches', 'sesame seeds', 'nutmeg', 'chilled unsalted butter, cut into 1/2-inch cubes', 'packed dark brown sugar', 'chilled unsalted butter, cut into pieces', 'mayonnaise', 'quick-cooking oats', 'boiling water', 'lukewarm water', 'eggnog', 'bacon grease', 'sifted all-purpose flour', 'unsalted butter, softened', 'millet flour', 'all-purpose flour, divided', 'beaten eggs', 'creamed corn', 'fine cornmeal', 'crushed pineapple, well drained', 'cold unsalted butter', 'pumpkin pie spice (Optional)', 'white sugar, divided', 'almond flour', 'plain yogurt', 'biscuit baking mix', 'low-fat buttermilk', 'chopped dates', 'buttermilk, at room temperature', 'white whole wheat flour', 'sourdough starter', 'milk, or more as needed', 'turbinado sugar', 'orange', 'turbinado (raw) sugar']
2025-04-07 18:19:20,626 - __main__ - INFO - Allergens detected: {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}
2025-04-07 18:19:20,627 - __main__ - INFO - Image classification completed in 8.57 seconds
2025-04-07 18:19:20,627 - __main__ - INFO - Returning classification result: {'classifications': ['quick bread recipes', 'pies', 'cookies', 'fruit desserts', 'breakfast and brunch'], 'confidences': [0.18319839239120483, 0.12289268523454666, 0.10753841698169708, 0.08086100965738297, 0.07664183527231216], 'ingredients': ['salt', 'white sugar', 'all-purpose flour', 'baking powder', 'baking soda', 'ground cinnamon', 'eggs', 'vegetable oil', 'vanilla extract', 'milk', 'ground nutmeg', 'buttermilk', 'egg', 'pumpkin puree', 'brown sugar', 'butter', 'water', 'butter, melted', 'ground cloves', 'chopped walnuts'], 'allergens': {'recipe_name': 'quick bread recipes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'pumpkin allergy', 'sugar allergy / intolerance', 'nut allergy']}}
2025-04-07 18:19:20,628 - __main__ - INFO - Response: 200
2025-04-07 18:19:20,629 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:19:20] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:19:24,339 - __main__ - INFO - Request: GET http://localhost:5001/barcode/014100099482
2025-04-07 18:19:24,339 - __main__ - INFO - Looking up barcode: 014100099482
2025-04-07 18:19:24,730 - __main__ - INFO - Product saved/updated in database for barcode: 014100099482
2025-04-07 18:19:24,730 - __main__ - INFO - Processing allergens for product: Vanilla cupcake grahams baked graham snacks, vanilla cupcake
2025-04-07 18:19:36,744 - __main__ - INFO - Allergens detected: {'recipe_name': 'Vanilla cupcake grahams baked graham snacks, vanilla cupcake', 'allergies': ['oral allergy syndrome', 'canola oil allergy', 'corn allergy', 'milk allergy / lactose intolerance', 'legume allergy', 'pumpkin allergy', 'radish allergy', 'soy allergy', 'sugar allergy / intolerance', 'potato allergy', 'nightshade allergy', 'gluten allergy']}
2025-04-07 18:19:36,744 - __main__ - INFO - Response: 200
2025-04-07 18:19:36,744 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:19:36] "GET /barcode/014100099482 HTTP/1.1" 200 -
2025-04-07 18:20:33,833 - __main__ - INFO - Request: GET http://localhost:5001/barcode/014100099482
2025-04-07 18:20:33,834 - __main__ - INFO - Looking up barcode: 014100099482
2025-04-07 18:20:33,930 - __main__ - INFO - Product saved/updated in database for barcode: 014100099482
2025-04-07 18:20:33,930 - __main__ - INFO - Processing allergens for product: Vanilla cupcake grahams baked graham snacks, vanilla cupcake
2025-04-07 18:20:46,156 - __main__ - INFO - Allergens detected: {'recipe_name': 'Vanilla cupcake grahams baked graham snacks, vanilla cupcake', 'allergies': ['oral allergy syndrome', 'canola oil allergy', 'corn allergy', 'milk allergy / lactose intolerance', 'legume allergy', 'pumpkin allergy', 'radish allergy', 'soy allergy', 'sugar allergy / intolerance', 'potato allergy', 'nightshade allergy', 'gluten allergy']}
2025-04-07 18:20:46,157 - __main__ - INFO - Response: 200
2025-04-07 18:20:46,157 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:20:46] "GET /barcode/014100099482 HTTP/1.1" 200 -
2025-04-07 18:20:47,463 - __main__ - INFO - Request: GET http://localhost:5001/barcode/014100099482
2025-04-07 18:20:47,463 - __main__ - INFO - Looking up barcode: 014100099482
2025-04-07 18:20:47,557 - __main__ - INFO - Product saved/updated in database for barcode: 014100099482
2025-04-07 18:20:47,557 - __main__ - INFO - Processing allergens for product: Vanilla cupcake grahams baked graham snacks, vanilla cupcake
2025-04-07 18:20:59,734 - __main__ - INFO - Allergens detected: {'recipe_name': 'Vanilla cupcake grahams baked graham snacks, vanilla cupcake', 'allergies': ['oral allergy syndrome', 'canola oil allergy', 'corn allergy', 'milk allergy / lactose intolerance', 'legume allergy', 'pumpkin allergy', 'radish allergy', 'soy allergy', 'sugar allergy / intolerance', 'potato allergy', 'nightshade allergy', 'gluten allergy']}
2025-04-07 18:20:59,734 - __main__ - INFO - Response: 200
2025-04-07 18:20:59,734 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:20:59] "GET /barcode/014100099482 HTTP/1.1" 200 -
2025-04-07 18:21:20,124 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:21:20,650 - __main__ - INFO - Starting image classification
2025-04-07 18:21:20,650 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:21:21,740 - __main__ - INFO - Image classified as: pies
2025-04-07 18:21:21,942 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar', 'sweetened condensed milk', 'cornstarch', 'eggs, beaten', 'cream cheese, softened', 'lemon juice', 'unbaked pie crust', 'frozen whipped topping, thawed', 'light corn syrup', 'semisweet chocolate chips', 'prepared graham cracker crust', 'unsalted butter', 'pecan halves', 'light brown sugar', 'egg', 'pastry for a 9 inch double crust pie', 'heavy whipping cream', "confectioners' sugar", 'instant vanilla pudding mix', 'pastry for a 9 inch single crust pie', 'egg yolks', 'baking powder', 'graham cracker crumbs', 'kosher salt', 'pie shell, baked', 'unsweetened cocoa powder', 'frozen whipped topping (such as Cool Whip), thawed', 'egg whites', 'ice water', 'ground allspice', 'heavy cream', 'cream cheese', 'almond extract', 'unsalted butter, melted', 'unbaked pie shell', 'maple syrup', 'rolled oats', 'cooking spray', 'thinly sliced apples', 'honey', 'firmly packed brown sugar', 'unflavored gelatin', 'powdered sugar', 'melted butter', 'eggs, lightly beaten', 'granulated sugar', 'miniature marshmallows', 'pie shell', 'light cream', 'solid pack pumpkin puree', 'cream of tartar', 'pie crust, baked', 'dark corn syrup', 'chopped walnuts', 'lemon zest', "sifted confectioners' sugar", 'canned pumpkin', 'refrigerated pie crust', 'whipping cream', 'egg, beaten', 'semi-sweet chocolate chips', 'sour cream', 'sugar', 'instant chocolate pudding mix', 'cold water', 'packed light brown sugar', 'unbaked deep dish pie crust', 'bourbon', 'coffee-flavored liqueur (such as Kahlua)', 'chocolate syrup', 'unsweetened chocolate, chopped', 'white sugar, divided', 'butter, cut into small chunks', 'unbaked tart shells', 'maple-flavored extract', 'butter, chilled', 'pastry for a double-crust 9-inch pie', 'butter, chilled and diced', 'dark rum', 'arrowroot powder', 'baked pie shell', 'large eggs', 'egg yolk', 'vegetable shortening', 'eggs, slightly beaten', 'baking soda', 'unsalted butter, melted and cooled slightly', 'instant coffee granules', 'corn syrup', 'caramel sauce', 'Snickers', 'apples - peeled, cored and sliced', 'cream cheese, room temperature', 'fresh strawberries, sliced', 'sweet potatoes, drained and mashed', 'freshly grated nutmeg', 'unsweetened chocolate', 'creme de menthe liqueur', 'pastry for a 9-inch double crust pie', 'cold milk', 'prepared chocolate cookie crumb crust', 'pumpkin', 'vanilla', 'sugar pumpkin', 'vegetable oil', 'speculoos cookies (such as Lotus Biscoff)', 'unbaked pie shells', 'molasses', 'boiling water', 'skim milk', 'cinnamon', 'crushed graham crackers', 'Granny Smith apples - peeled, cored, and sliced', 'raspberry jam', 'unsalted butter, softened', 'egg substitute', 'vegan margarine (such as Earth Balance)', 'pie crusts', 'dark brown sugar', 'french vanilla soy creamer']
2025-04-07 18:21:29,329 - __main__ - INFO - Allergens detected: {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}
2025-04-07 18:21:29,330 - __main__ - INFO - Image classification completed in 8.68 seconds
2025-04-07 18:21:29,330 - __main__ - INFO - Returning classification result: {'classifications': ['pies', 'breakfast and brunch', 'cakes', 'fruit pies', 'sauces and condiments'], 'confidences': [0.4468541145324707, 0.1255374550819397, 0.12023434042930603, 0.06779704988002777, 0.02686823531985283], 'ingredients': ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar'], 'allergens': {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:21:29,332 - __main__ - INFO - Response: 200
2025-04-07 18:21:29,333 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:21:29] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:22:49,414 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:22:50,226 - __main__ - INFO - Starting image classification
2025-04-07 18:22:50,226 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:22:51,289 - __main__ - INFO - Image classified as: pies
2025-04-07 18:22:51,510 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar', 'sweetened condensed milk', 'cornstarch', 'eggs, beaten', 'cream cheese, softened', 'lemon juice', 'unbaked pie crust', 'frozen whipped topping, thawed', 'light corn syrup', 'semisweet chocolate chips', 'prepared graham cracker crust', 'unsalted butter', 'pecan halves', 'light brown sugar', 'egg', 'pastry for a 9 inch double crust pie', 'heavy whipping cream', "confectioners' sugar", 'instant vanilla pudding mix', 'pastry for a 9 inch single crust pie', 'egg yolks', 'baking powder', 'graham cracker crumbs', 'kosher salt', 'pie shell, baked', 'unsweetened cocoa powder', 'frozen whipped topping (such as Cool Whip), thawed', 'egg whites', 'ice water', 'ground allspice', 'heavy cream', 'cream cheese', 'almond extract', 'unsalted butter, melted', 'unbaked pie shell', 'maple syrup', 'rolled oats', 'cooking spray', 'thinly sliced apples', 'honey', 'firmly packed brown sugar', 'unflavored gelatin', 'powdered sugar', 'melted butter', 'eggs, lightly beaten', 'granulated sugar', 'miniature marshmallows', 'pie shell', 'light cream', 'solid pack pumpkin puree', 'cream of tartar', 'pie crust, baked', 'dark corn syrup', 'chopped walnuts', 'lemon zest', "sifted confectioners' sugar", 'canned pumpkin', 'refrigerated pie crust', 'whipping cream', 'egg, beaten', 'semi-sweet chocolate chips', 'sour cream', 'sugar', 'instant chocolate pudding mix', 'cold water', 'packed light brown sugar', 'unbaked deep dish pie crust', 'bourbon', 'coffee-flavored liqueur (such as Kahlua)', 'chocolate syrup', 'unsweetened chocolate, chopped', 'white sugar, divided', 'butter, cut into small chunks', 'unbaked tart shells', 'maple-flavored extract', 'butter, chilled', 'pastry for a double-crust 9-inch pie', 'butter, chilled and diced', 'dark rum', 'arrowroot powder', 'baked pie shell', 'large eggs', 'egg yolk', 'vegetable shortening', 'eggs, slightly beaten', 'baking soda', 'unsalted butter, melted and cooled slightly', 'instant coffee granules', 'corn syrup', 'caramel sauce', 'Snickers', 'apples - peeled, cored and sliced', 'cream cheese, room temperature', 'fresh strawberries, sliced', 'sweet potatoes, drained and mashed', 'freshly grated nutmeg', 'unsweetened chocolate', 'creme de menthe liqueur', 'pastry for a 9-inch double crust pie', 'cold milk', 'prepared chocolate cookie crumb crust', 'pumpkin', 'vanilla', 'sugar pumpkin', 'vegetable oil', 'speculoos cookies (such as Lotus Biscoff)', 'unbaked pie shells', 'molasses', 'boiling water', 'skim milk', 'cinnamon', 'crushed graham crackers', 'Granny Smith apples - peeled, cored, and sliced', 'raspberry jam', 'unsalted butter, softened', 'egg substitute', 'vegan margarine (such as Earth Balance)', 'pie crusts', 'dark brown sugar', 'french vanilla soy creamer']
2025-04-07 18:22:55,104 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:22:55,607 - __main__ - INFO - Starting image classification
2025-04-07 18:22:55,607 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:22:56,805 - __main__ - INFO - Image classified as: pies
2025-04-07 18:22:57,027 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar', 'sweetened condensed milk', 'cornstarch', 'eggs, beaten', 'cream cheese, softened', 'lemon juice', 'unbaked pie crust', 'frozen whipped topping, thawed', 'light corn syrup', 'semisweet chocolate chips', 'prepared graham cracker crust', 'unsalted butter', 'pecan halves', 'light brown sugar', 'egg', 'pastry for a 9 inch double crust pie', 'heavy whipping cream', "confectioners' sugar", 'instant vanilla pudding mix', 'pastry for a 9 inch single crust pie', 'egg yolks', 'baking powder', 'graham cracker crumbs', 'kosher salt', 'pie shell, baked', 'unsweetened cocoa powder', 'frozen whipped topping (such as Cool Whip), thawed', 'egg whites', 'ice water', 'ground allspice', 'heavy cream', 'cream cheese', 'almond extract', 'unsalted butter, melted', 'unbaked pie shell', 'maple syrup', 'rolled oats', 'cooking spray', 'thinly sliced apples', 'honey', 'firmly packed brown sugar', 'unflavored gelatin', 'powdered sugar', 'melted butter', 'eggs, lightly beaten', 'granulated sugar', 'miniature marshmallows', 'pie shell', 'light cream', 'solid pack pumpkin puree', 'cream of tartar', 'pie crust, baked', 'dark corn syrup', 'chopped walnuts', 'lemon zest', "sifted confectioners' sugar", 'canned pumpkin', 'refrigerated pie crust', 'whipping cream', 'egg, beaten', 'semi-sweet chocolate chips', 'sour cream', 'sugar', 'instant chocolate pudding mix', 'cold water', 'packed light brown sugar', 'unbaked deep dish pie crust', 'bourbon', 'coffee-flavored liqueur (such as Kahlua)', 'chocolate syrup', 'unsweetened chocolate, chopped', 'white sugar, divided', 'butter, cut into small chunks', 'unbaked tart shells', 'maple-flavored extract', 'butter, chilled', 'pastry for a double-crust 9-inch pie', 'butter, chilled and diced', 'dark rum', 'arrowroot powder', 'baked pie shell', 'large eggs', 'egg yolk', 'vegetable shortening', 'eggs, slightly beaten', 'baking soda', 'unsalted butter, melted and cooled slightly', 'instant coffee granules', 'corn syrup', 'caramel sauce', 'Snickers', 'apples - peeled, cored and sliced', 'cream cheese, room temperature', 'fresh strawberries, sliced', 'sweet potatoes, drained and mashed', 'freshly grated nutmeg', 'unsweetened chocolate', 'creme de menthe liqueur', 'pastry for a 9-inch double crust pie', 'cold milk', 'prepared chocolate cookie crumb crust', 'pumpkin', 'vanilla', 'sugar pumpkin', 'vegetable oil', 'speculoos cookies (such as Lotus Biscoff)', 'unbaked pie shells', 'molasses', 'boiling water', 'skim milk', 'cinnamon', 'crushed graham crackers', 'Granny Smith apples - peeled, cored, and sliced', 'raspberry jam', 'unsalted butter, softened', 'egg substitute', 'vegan margarine (such as Earth Balance)', 'pie crusts', 'dark brown sugar', 'french vanilla soy creamer']
2025-04-07 18:22:59,202 - __main__ - INFO - Allergens detected: {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}
2025-04-07 18:22:59,202 - __main__ - INFO - Image classification completed in 8.98 seconds
2025-04-07 18:22:59,202 - __main__ - INFO - Returning classification result: {'classifications': ['pies', 'breakfast and brunch', 'cakes', 'fruit pies', 'sauces and condiments'], 'confidences': [0.4468541145324707, 0.1255374550819397, 0.12023434042930603, 0.06779704988002777, 0.02686823531985283], 'ingredients': ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar'], 'allergens': {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:22:59,202 - __main__ - INFO - Response: 200
2025-04-07 18:22:59,202 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:22:59] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:23:04,473 - __main__ - INFO - Allergens detected: {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}
2025-04-07 18:23:04,473 - __main__ - INFO - Image classification completed in 8.87 seconds
2025-04-07 18:23:04,473 - __main__ - INFO - Returning classification result: {'classifications': ['pies', 'breakfast and brunch', 'cakes', 'fruit pies', 'sauces and condiments'], 'confidences': [0.4468541145324707, 0.1255374550819397, 0.12023434042930603, 0.06779704988002777, 0.02686823531985283], 'ingredients': ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar'], 'allergens': {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:23:04,473 - __main__ - INFO - Response: 200
2025-04-07 18:23:04,473 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:23:04] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:23:35,012 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:23:35,524 - __main__ - INFO - Starting image classification
2025-04-07 18:23:35,524 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:23:36,600 - __main__ - INFO - Image classified as: pies
2025-04-07 18:23:36,801 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar', 'sweetened condensed milk', 'cornstarch', 'eggs, beaten', 'cream cheese, softened', 'lemon juice', 'unbaked pie crust', 'frozen whipped topping, thawed', 'light corn syrup', 'semisweet chocolate chips', 'prepared graham cracker crust', 'unsalted butter', 'pecan halves', 'light brown sugar', 'egg', 'pastry for a 9 inch double crust pie', 'heavy whipping cream', "confectioners' sugar", 'instant vanilla pudding mix', 'pastry for a 9 inch single crust pie', 'egg yolks', 'baking powder', 'graham cracker crumbs', 'kosher salt', 'pie shell, baked', 'unsweetened cocoa powder', 'frozen whipped topping (such as Cool Whip), thawed', 'egg whites', 'ice water', 'ground allspice', 'heavy cream', 'cream cheese', 'almond extract', 'unsalted butter, melted', 'unbaked pie shell', 'maple syrup', 'rolled oats', 'cooking spray', 'thinly sliced apples', 'honey', 'firmly packed brown sugar', 'unflavored gelatin', 'powdered sugar', 'melted butter', 'eggs, lightly beaten', 'granulated sugar', 'miniature marshmallows', 'pie shell', 'light cream', 'solid pack pumpkin puree', 'cream of tartar', 'pie crust, baked', 'dark corn syrup', 'chopped walnuts', 'lemon zest', "sifted confectioners' sugar", 'canned pumpkin', 'refrigerated pie crust', 'whipping cream', 'egg, beaten', 'semi-sweet chocolate chips', 'sour cream', 'sugar', 'instant chocolate pudding mix', 'cold water', 'packed light brown sugar', 'unbaked deep dish pie crust', 'bourbon', 'coffee-flavored liqueur (such as Kahlua)', 'chocolate syrup', 'unsweetened chocolate, chopped', 'white sugar, divided', 'butter, cut into small chunks', 'unbaked tart shells', 'maple-flavored extract', 'butter, chilled', 'pastry for a double-crust 9-inch pie', 'butter, chilled and diced', 'dark rum', 'arrowroot powder', 'baked pie shell', 'large eggs', 'egg yolk', 'vegetable shortening', 'eggs, slightly beaten', 'baking soda', 'unsalted butter, melted and cooled slightly', 'instant coffee granules', 'corn syrup', 'caramel sauce', 'Snickers', 'apples - peeled, cored and sliced', 'cream cheese, room temperature', 'fresh strawberries, sliced', 'sweet potatoes, drained and mashed', 'freshly grated nutmeg', 'unsweetened chocolate', 'creme de menthe liqueur', 'pastry for a 9-inch double crust pie', 'cold milk', 'prepared chocolate cookie crumb crust', 'pumpkin', 'vanilla', 'sugar pumpkin', 'vegetable oil', 'speculoos cookies (such as Lotus Biscoff)', 'unbaked pie shells', 'molasses', 'boiling water', 'skim milk', 'cinnamon', 'crushed graham crackers', 'Granny Smith apples - peeled, cored, and sliced', 'raspberry jam', 'unsalted butter, softened', 'egg substitute', 'vegan margarine (such as Earth Balance)', 'pie crusts', 'dark brown sugar', 'french vanilla soy creamer']
2025-04-07 18:23:38,929 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:23:39,418 - __main__ - INFO - Starting image classification
2025-04-07 18:23:39,418 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:23:40,600 - __main__ - INFO - Image classified as: pies
2025-04-07 18:23:40,822 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar', 'sweetened condensed milk', 'cornstarch', 'eggs, beaten', 'cream cheese, softened', 'lemon juice', 'unbaked pie crust', 'frozen whipped topping, thawed', 'light corn syrup', 'semisweet chocolate chips', 'prepared graham cracker crust', 'unsalted butter', 'pecan halves', 'light brown sugar', 'egg', 'pastry for a 9 inch double crust pie', 'heavy whipping cream', "confectioners' sugar", 'instant vanilla pudding mix', 'pastry for a 9 inch single crust pie', 'egg yolks', 'baking powder', 'graham cracker crumbs', 'kosher salt', 'pie shell, baked', 'unsweetened cocoa powder', 'frozen whipped topping (such as Cool Whip), thawed', 'egg whites', 'ice water', 'ground allspice', 'heavy cream', 'cream cheese', 'almond extract', 'unsalted butter, melted', 'unbaked pie shell', 'maple syrup', 'rolled oats', 'cooking spray', 'thinly sliced apples', 'honey', 'firmly packed brown sugar', 'unflavored gelatin', 'powdered sugar', 'melted butter', 'eggs, lightly beaten', 'granulated sugar', 'miniature marshmallows', 'pie shell', 'light cream', 'solid pack pumpkin puree', 'cream of tartar', 'pie crust, baked', 'dark corn syrup', 'chopped walnuts', 'lemon zest', "sifted confectioners' sugar", 'canned pumpkin', 'refrigerated pie crust', 'whipping cream', 'egg, beaten', 'semi-sweet chocolate chips', 'sour cream', 'sugar', 'instant chocolate pudding mix', 'cold water', 'packed light brown sugar', 'unbaked deep dish pie crust', 'bourbon', 'coffee-flavored liqueur (such as Kahlua)', 'chocolate syrup', 'unsweetened chocolate, chopped', 'white sugar, divided', 'butter, cut into small chunks', 'unbaked tart shells', 'maple-flavored extract', 'butter, chilled', 'pastry for a double-crust 9-inch pie', 'butter, chilled and diced', 'dark rum', 'arrowroot powder', 'baked pie shell', 'large eggs', 'egg yolk', 'vegetable shortening', 'eggs, slightly beaten', 'baking soda', 'unsalted butter, melted and cooled slightly', 'instant coffee granules', 'corn syrup', 'caramel sauce', 'Snickers', 'apples - peeled, cored and sliced', 'cream cheese, room temperature', 'fresh strawberries, sliced', 'sweet potatoes, drained and mashed', 'freshly grated nutmeg', 'unsweetened chocolate', 'creme de menthe liqueur', 'pastry for a 9-inch double crust pie', 'cold milk', 'prepared chocolate cookie crumb crust', 'pumpkin', 'vanilla', 'sugar pumpkin', 'vegetable oil', 'speculoos cookies (such as Lotus Biscoff)', 'unbaked pie shells', 'molasses', 'boiling water', 'skim milk', 'cinnamon', 'crushed graham crackers', 'Granny Smith apples - peeled, cored, and sliced', 'raspberry jam', 'unsalted butter, softened', 'egg substitute', 'vegan margarine (such as Earth Balance)', 'pie crusts', 'dark brown sugar', 'french vanilla soy creamer']
2025-04-07 18:23:44,712 - __main__ - INFO - Allergens detected: {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}
2025-04-07 18:23:44,712 - __main__ - INFO - Image classification completed in 9.19 seconds
2025-04-07 18:23:44,712 - __main__ - INFO - Returning classification result: {'classifications': ['pies', 'breakfast and brunch', 'cakes', 'fruit pies', 'sauces and condiments'], 'confidences': [0.4468541145324707, 0.1255374550819397, 0.12023434042930603, 0.06779704988002777, 0.02686823531985283], 'ingredients': ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar'], 'allergens': {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:23:44,712 - __main__ - INFO - Response: 200
2025-04-07 18:23:44,712 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:23:44] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:23:48,507 - __main__ - INFO - Allergens detected: {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}
2025-04-07 18:23:48,507 - __main__ - INFO - Image classification completed in 9.09 seconds
2025-04-07 18:23:48,507 - __main__ - INFO - Returning classification result: {'classifications': ['pies', 'breakfast and brunch', 'cakes', 'fruit pies', 'sauces and condiments'], 'confidences': [0.4468541145324707, 0.1255374550819397, 0.12023434042930603, 0.06779704988002777, 0.02686823531985283], 'ingredients': ['white sugar', 'salt', 'all-purpose flour', 'vanilla extract', 'ground cinnamon', 'ground nutmeg', 'eggs', 'butter', 'milk', 'pumpkin puree', 'butter, melted', 'ground ginger', 'butter, softened', 'chopped pecans', 'ground cloves', 'packed brown sugar', 'pumpkin pie spice', 'water', 'evaporated milk', 'brown sugar'], 'allergens': {'recipe_name': 'pies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'histamine allergy', 'aquagenic urticaria', 'nut allergy', 'pumpkin allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:23:48,509 - __main__ - INFO - Response: 200
2025-04-07 18:23:48,510 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:23:48] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:25:50,581 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:25:50,981 - __main__ - INFO - Starting image classification
2025-04-07 18:25:50,981 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:25:51,841 - __main__ - INFO - Image classified as: eggs
2025-04-07 18:25:52,033 - __main__ - INFO - Retrieved ingredients: ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream', 'frozen chopped spinach, thawed and drained', 'garlic powder', 'vegetable oil', 'half-and-half', 'unbaked pie crust', 'shredded mozzarella cheese', 'egg whites', 'salt and freshly ground black pepper to taste', 'chopped fresh spinach', 'onion, chopped', 'crumbled feta cheese', 'sour cream', 'cayenne pepper', 'ground nutmeg', 'dried parsley', 'onion powder', 'shredded Monterey Jack cheese', 'fresh spinach', 'onion, diced', 'water', 'chopped green bell pepper', 'Dijon mustard', 'salt to taste', 'chopped red bell pepper', 'egg', 'sliced fresh mushrooms', 'whole milk', 'butter, melted', 'half-and-half cream', 'black pepper', 'freshly ground black pepper to taste', 'onion, finely chopped', 'chopped green onion', 'freshly ground black pepper', 'tomato, diced', 'unsalted butter', 'chopped fresh parsley', 'Cheddar cheese', 'dried basil', 'dried dill weed', 'Cheddar cheese, shredded', 'ground cumin', 'diced red bell pepper', 'cubed fully cooked ham', 'salsa', 'tomato, chopped', 'diced onion', 'large eggs', 'finely chopped onion', 'white sugar', 'eggs, lightly beaten', 'diced cooked ham', 'pepper', 'minced garlic', 'skim milk', 'shredded reduced-fat Cheddar cheese', 'red bell pepper, chopped', 'cayenne pepper, or to taste', 'cooking spray (Optional)', 'chopped fresh thyme', 'large eggs, beaten', 'salt and freshly ground black pepper', 'olive oil cooking spray', '2% milk', 'onion, thinly sliced', 'shredded Colby-Monterey Jack cheese, divided', 'garlic salt', 'chili powder', 'diced green bell pepper', 'mayonnaise', 'herbes de Provence, or to taste', 'green bell pepper, chopped', 'vegetable oil, or as needed', 'ground white pepper', 'breakfast sausage', 'minced onion', 'cubed cooked ham', 'hot pepper sauce, or to taste', 'bacon, chopped', 'shredded pepperjack cheese', 'onion, sliced', 'chopped fresh mushrooms', 'green onions, chopped', 'eggs, or more to taste', 'pork sausage', 'grated Gruyere cheese', 'pie crust pastry', 'cream cheese', 'cooked ham, cubed', 'diced green onions', 'olive oil, or as needed', 'fresh mushrooms, chopped', 'Italian seasoning', 'English muffins, split and toasted', 'cooked ham, diced', 'hot pepper sauce (Optional)', 'shredded mild Cheddar cheese', 'salt, or to taste', 'chopped kale', 'soy sauce', 'freshly grated Parmesan cheese', 'sesame seeds', 'shredded sharp Cheddar cheese', 'corn tortillas', 'shredded Cheddar cheese, divided', 'red pepper flakes', 'Worcestershire sauce', 'bulk pork sausage', 'shredded Parmesan cheese', 'red onion, diced', 'chicken broth', 'nutmeg', 'sea salt and freshly ground black pepper to taste', 'ground black pepper, or to taste']
2025-04-07 18:25:59,229 - __main__ - INFO - Allergens detected: {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}
2025-04-07 18:25:59,229 - __main__ - INFO - Image classification completed in 8.25 seconds
2025-04-07 18:25:59,230 - __main__ - INFO - Returning classification result: {'classifications': ['eggs', 'european', 'main dishes', 'pasta', 'fruit desserts'], 'confidences': [0.4323418140411377, 0.29118967056274414, 0.1415310502052307, 0.04274937883019447, 0.022559039294719696], 'ingredients': ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream'], 'allergens': {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}}
2025-04-07 18:25:59,231 - __main__ - INFO - Response: 200
2025-04-07 18:25:59,232 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:25:59] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:26:02,901 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/main%20dishes
2025-04-07 18:26:03,057 - __main__ - INFO - Retrieved ingredients: ['olive oil', 'salt', 'garlic, minced', 'ground black pepper', 'water', 'garlic powder', 'all-purpose flour', 'ground beef', 'butter', 'soy sauce', 'grated Parmesan cheese', 'salt and ground black pepper to taste', 'vegetable oil', 'ground cumin', 'dried oregano', 'kosher salt', 'shredded mozzarella cheese', 'cayenne pepper', 'onion, chopped', 'milk', 'white sugar', 'egg', 'chili powder', 'garlic', 'tomato paste', 'eggs', 'heavy cream', 'brown sugar', 'minced garlic', 'cornstarch', 'salt and pepper to taste', 'mayonnaise', 'unsalted butter', 'skinless, boneless chicken breast halves', 'onion powder', 'chicken broth', 'cooking spray', 'sour cream', 'salt to taste', 'salt and freshly ground black pepper to taste', 'shredded Cheddar cheese', 'sesame oil', 'onion', 'Italian seasoning', 'red pepper flakes', 'tomato sauce', 'lean ground beef', 'white wine', 'lemon juice', 'black pepper', 'Worcestershire sauce', 'olive oil, divided', 'paprika', 'ketchup', 'flour tortillas', 'extra-virgin olive oil', 'chopped fresh basil', 'chopped fresh cilantro', 'onion, diced', 'freshly ground black pepper', 'heavy whipping cream', 'dried basil', 'dried thyme', 'onion, sliced', 'balsamic vinegar', 'bacon', 'honey', 'rice vinegar', 'penne pasta', 'bay leaves', 'lime juice', 'chopped onion', 'crushed red pepper', 'chopped fresh parsley', 'sliced mushrooms', 'curry powder', 'plain yogurt', 'active dry yeast', 'ground ginger', 'salt, or to taste', 'chicken stock', 'low-sodium chicken broth', 'ricotta cheese', 'ground pork', 'dry white wine', 'beef broth', 'egg, beaten', 'ground turmeric', 'apple cider vinegar', 'shredded Monterey Jack cheese', 'corn tortillas', 'spaghetti sauce', 'crushed red pepper flakes', 'ground cinnamon', 'water, or as needed', 'pizza sauce', 'Dijon mustard', 'marinara sauce', 'ground coriander', 'cream cheese, softened', 'minced onion', 'fresh ginger', 'ground black pepper to taste', 'crumbled feta cheese', 'sugar', 'garlic salt', 'ground nutmeg', 'kosher salt, divided', 'onion, finely chopped', 'white vinegar', 'egg, lightly beaten', 'sesame seeds', 'lime, juiced', 'ground chicken', 'diced tomatoes', 'baking powder', 'salt and freshly ground black pepper', 'half-and-half', 'dried parsley', 'dry onion soup mix', 'coconut milk', 'sliced fresh mushrooms', 'beef short ribs', 'bread crumbs', 'lemon zest', 'oregano', 'packed brown sugar', 'vegetable oil, divided', 'Swiss cheese', 'talian seasoning', 'reduced-sodium soy sauce', 'eggs, beaten', 'panko bread crumbs', 'warm water', 'diced onion', 'green bell pepper, chopped', 'wonton wrappers', 'green onions, chopped', 'pepper', 'garlic, chopped', 'ground black pepper, divided', 'red bell pepper, sliced', 'vegetable broth', 'red onion, thinly sliced', 'skinless, boneless chicken thighs', 'fresh spinach', 'angel hair pasta', 'low-sodium soy sauce', 'linguine pasta', 'lemon, juiced', 'garlic, crushed', 'tomato, sliced', 'carrots', 'finely grated Parmigiano-Reggiano cheese', 'oil', 'cherry tomatoes', 'grated Parmesan cheese, or to taste', 'poppy seeds', 'fresh parsley', 'shredded mozzarella cheese, divided', 'cold water', 'bread flour', 'cumin seeds', 'garam masala', 'garlic,', 'minced fresh ginger root', 'shredded cabbage', 'condensed cream of mushroom soup', 'butter, softened', 'rigatoni pasta', 'freshly ground black pepper to taste', 'shredded sharp Cheddar cheese', 'sliced green onions', 'dry fettuccine pasta', 'smoked paprika', 'white onion', 'refried beans', 'grated Romano cheese', 'green onions', 'flour tortillas, warmed', 'butter, divided', 'butter, melted', 'finely chopped onion', 'melted butter', 'mozzarella cheese', 'fresh rosemary', 'avocado, sliced', 'frozen peas', 'shredded Cheddar cheese, divided', 'onions, chopped', 'spaghetti', 'garlic, finely chopped', 'beef brisket', 'broccoli florets', 'granulated garlic', 'snow peas', 'white pepper', 'salted butter', 'ginger paste', 'dried rosemary', 'bacon, chopped', 'white wine vinegar', 'shallot', 'Parmesan cheese', 'fresh lemon juice', 'garlic powder, or to taste', 'fresh mushrooms, sliced', 'red wine vinegar', 'grated Parmesan cheese, divided', 'cider vinegar', 'oyster sauce', 'ginger', 'nonstick cooking spray', 'ground turkey', 'red onion', 'hoisin sauce', 'toasted sesame oil', 'toasted sesame seeds', 'taco seasoning mix', 'cumin', 'olive oil cooking spray', 'chopped cilantro', 'onion, thinly sliced', 'bay leaf', 'onions, finely chopped', 'celery', 'whole wheat bread', 'salt, divided', 'dry bread crumbs', 'Marsala wine', 'garlic, peeled', 'potatoes', 'kosher salt, or to taste', 'red bell pepper, cut into strips', 'peanut butter', 'refrigerated pizza dough', 'red bell pepper, chopped', 'ground cloves', 'fettuccine', 'freshly grated Parmesan cheese', 'extra virgin olive oil', 'shredded Parmesan cheese', 'cinnamon stick', 'whole milk', 'vegetable oil, or as needed', 'distilled white vinegar', 'bread', 'red wine', 'yellow onion, diced', 'tomato, chopped', 'creamy peanut butter', 'minced fresh parsley', 'beef stock', 'chopped celery', 'baby spinach', 'basil leaves', 'pizza dough', 'diced cooked ham', 'Cajun seasoning', 'refrigerated biscuit dough', 'onion, minced', 'deli ham', 'pepperoni', 'dried marjoram', 'light brown sugar', 'parsley', 'bulk Italian sausage', 'cloves garlic, minced', 'cottage cheese', 'tilapia fillets', 'reduced sodium chicken broth', 'yellow onion', 'unsalted butter, melted', 'minced fresh ginger', 'vegetable oil for frying, or as needed', 'seasoned bread crumbs', 'frozen corn', 'boiling water', 'macaroni', 'maple syrup', 'green onion', 'tomatoes, chopped', 'evaporated milk', 'chicken bouillon', 'chopped green bell pepper', 'canola oil', 'orange juice', 'chopped fresh mint', 'green bell pepper, sliced', 'uncooked medium shrimp, peeled and deveined', 'lime, cut into wedges', 'large eggs', 'Italian-seasoned bread crumbs', 'red bell pepper, thinly sliced', 'celery, chopped', 'vegetable oil for frying', "Hawaiian bread rolls (such as King's)", 'Italian seasoned bread crumbs', 'chopped parsley', 'shredded Swiss cheese', 'ground sirloin', 'condensed cream of chicken soup', 'freshly grated Parmigiano-Reggiano cheese', 'coarsely ground black pepper', 'Parmigiano-Reggiano cheese', 'chopped green onions', 'prosciutto', 'chopped peanuts', 'raisins', 'fresh basil leaves', 'sliced black olives, drained', 'sliced mushrooms, drained', 'shredded carrots', 'chopped fresh oregano', 'fine salt', 'eggs, lightly beaten', 'garlic cloves', 'fresh lime juice', 'olive oil, or as needed', 'provolone cheese', 'pineapple juice', 'red bell pepper', 'green bell pepper, cut into strips', 'fettuccine pasta', 'chopped fresh thyme', 'stewed tomatoes, undrained', 'Reynolds Slow Cooker Liner', 'reduced-sodium chicken broth', 'green bell pepper', 'chopped green onion', 'large shrimp, peeled and deveined', 'red onion, chopped', 'grapeseed oil', 'chopped fresh rosemary', 'Greek yogurt', 'garlic, minced, divided', 'Italian sausage', 'fresh cilantro', 'Parmigiano Reggiano cheese', 'beer', 'sesame oil, divided', 'hot pepper sauce', 'yellow onion, chopped', 'chopped green onion, or to taste', 'fish sauce', 'white onion, chopped', 'onion soup mix', 'garlic, diced', 'barbecue sauce', 'chicken thighs', 'chopped garlic', 'cherry tomatoes, halved', 'egg noodles', 'dried dill weed', 'shredded Parmesan cheese, divided', 'marinated artichoke hearts, drained and chopped', 'chopped sun-dried tomatoes', 'onion, coarsely chopped', 'garlic, sliced', 'diced ham', 'shredded mozzarella cheese, or to taste', 'seasoned rice vinegar', 'barbeque sauce', 'ground chuck', 'salsa', 'ground ancho chile powder', 'sea salt', 'freshly squeezed lemon juice', 'farfalle (bow tie) pasta', 'broccoli, cut into florets', 'roma (plum) tomatoes, chopped', 'yellow mustard', 'lime, zested and juiced', 'cornstarch, divided', 'grated fresh ginger', 'green onions, sliced', 'wine', 'feta cheese', 'seasoned breadcrumbs', '80% lean ground beef', 'soy sauce, divided', 'iceberg lettuce', 'finely chopped Chinese chives', 'dumpling wrappers', 'tomato, thinly sliced', 'finely chopped green bell pepper', 'diced tomatoes with green chile peppers', 'elbow macaroni', 'sun-dried tomato dressing', 'whole chicken', 'fresh ginger, chopped', 'tamarind paste', 'cloves', 'garlic paste', 'skewers', 'jalapeno pepper, seeded and minced', 'vegetable oil, divided, or as needed', 'shredded cooked chicken', 'spicy brown mustard', 'broccoli', 'Brussels sprouts', 'red curry paste', 'raw shrimp, peeled and deveined', 'napa cabbage, chopped', 'peanut oil', 'talian sausage', 'chives', 'taco seasoning', 'corn, drained', 'shallots, minced', 'refrigerated crescent rolls', 'prepared horseradish', 'thinly sliced red onion', 'grated carrots', 'Dijon mustard, or to taste', 'BBQ sauce', 'butter, melted, divided', 'dill pickle slices', 'ground paprika', 'Cantanzaro herbs', 'fresh basil,', 'frozen green peas', 'cinnamon', 'nutmeg', 'taco seasoning mix, divided', 'chopped red bell pepper', 'fresh spinach, chopped', 'lettuce', 'cloves garlic', 'chopped cilantro (optional)', 'chopped fresh Thai basil', 'potatoes, peeled', 'sliced cremini mushrooms', 'green bell pepper, diced', 'fresh orange juice', 'grated orange zest', 'tomato pasta sauce', 'turmeric', 'cardamom', 'baking soda', 'onions, finely diced', 'corned beef brisket, seasoning packet discarded', 'cracked black pepper', 'chopped fresh spinach', 'fresh thyme', 'chopped cooked chicken', 'Italian-style diced tomatoes', 'spinach', 'whole wheat tortillas, or as needed', 'canola oil, divided', 'ground nutmeg, or to taste', 'sauerkraut - drained, rinsed and minced', 'chopped cooked chicken breast', 'salt and pepper, to taste', 'yellow bell pepper, chopped', 'cilantro', 'guacamole', 'shredded lettuce', 'grated Cheddar cheese', 'cream cheese, cubed and softened', 'green bell peppers, chopped', 'farfalle pasta', 'beef chuck', 'Italian bread crumbs', 'zucchini', 'fresh thyme leaves', 'coarse salt', 'vegetable oil, or more as needed', 'carrot, cut into matchsticks', 'lime wedges, for serving', 'hamburger buns', 'carrot, shredded', 'vinegar', 'onion salt', 'rump roast', 'ground black pepper,', 'red pepper flakes (optional)', 'orzo', 'tostada shells', 'shredded lettuce, or to taste', 'potato starch', 'condensed tomato soup', 'cream cheese', 'chopped fresh mint leaves', 'whole cloves', 'black beans, rinsed and drained', 'fire-roasted diced tomatoes', 'cornmeal', 'olive oil, or as needed, divided', 'dried Mexican oregano', 'tomato puree', 'extra virgin olive oil, or as needed', 'chili oil, or to taste', "hot pepper sauce (such as Frank's RedHot), or to taste", 'lukewarm water', 'garlic, chopped, or to taste', 'shredded cooked chicken meat', 'red bell pepper, sliced into strips', 'yellow bell pepper, sliced into strips', 'cooking oil', 'liquid smoke', 'whole fennel seeds', 'Italian-style salad dressing', 'Italian sausage, casings removed', 'tomatoes, seeded and chopped', 'balsamic glaze, or as needed', 'chili sauce', 'onion, quartered', 'liquid smoke flavoring', 'fajita seasoning', 'skinless, boneless chicken breast halves, cubed', 'flank steak', 'pineapple chunks', 'sliced red bell pepper', 'sliced onion', 'lemon pepper', 'ijon mustard', 'everything bagel seasoning', 'cayenne pepper, or to taste', 'chopped fresh tarragon', 'deli roast beef', 'frozen whole kernel corn', 'olive oil, or more as needed', 'quick-cooking oats', 'boneless, skinless chicken breasts', 'rotini pasta', 'gochujang', 'white sugar, or to taste', 'water, divided', 'scallions', 'panko', 'orcestershire sauce', 'cayenne pepper (optional)', 'chicken bouillon granules', 'dried cilantro', 'red bell pepper, cut into thin strips', 'green bell pepper, cut into thin strips', 'all-purpose flour, or as needed', 'lard', 'masa harina', 'cabbage', 'red pepper flakes (Optional)', 'yellow bell pepper, cut into strips', 'saffron threads', 'chopped fresh parsley (Optional)', 'hot water', 'mushrooms', 'shredded Colby-Monterey Jack cheese', 'tahini', 'chickpeas, drained and rinsed', 'skin-on salmon fillets', 'sliced pepperoni sausage', 'portobello mushrooms, quartered', 'minced ginger', 'vodka', 'mussels', 'ginger-garlic paste', 'chopped fresh Italian parsley', 'ziti pasta', 'water, plus more as needed', 'green peas', 'green chile peppers, chopped', 'chili powder, or to taste', 'black beans, drained', 'French bread', 'avocado', 'fine sea salt', 'grated Gruyere cheese', 'shredded Cheddar cheese, or to taste', 'dark soy sauce', 'dry milk powder', 'warm water (110 degrees F/45 degrees C)', 'avocado - peeled, pitted, and sliced', 'butternut squash', 'sage leaves', 'cabbage, shredded', 'limes, cut into wedges', 'dried Italian seasoning', 'flour', 'cooked rice, or as needed', 'gingersnap cookie crumbs', 'pre-baked pizza crust', 'cream of mushroom soup', 'chopped fresh ginger', 'beef bouillon', 'crushed garlic', 'rock salt', 'boneless prime rib roast', 'stewed tomatoes', 'cooked jasmine rice', 'avocado - peeled, pitted and diced', 'onion, chopped (Optional)', 'garlic, thinly sliced', 'all-purpose flour, divided', 'mascarpone cheese', 'avocado oil', 'pinto beans, drained and rinsed', 'paprika to taste', 'egg whites', 'balsamic glaze', 'red onion, sliced', 'chopped sweet onion (such as a Walla Walla)', 'manicotti pasta', 'fresh parsley for garnish (optional)', 'thinly sliced prosciutto', 'dry sherry', 'dark brown sugar', 'dry pasta', 'fire roasted tomatoes', 'shredded Parmesan cheese, or to taste', 'prosciutto, diced', 'green beans', 'pork sausage', 'garlic powder, divided', 'shredded Italian cheese blend', 'sliced black olives', 'minced fresh rosemary', 'tomato', 'hamburger buns, split', 'crushed tomatoes', 'grated Parmigiano-Reggiano cheese, divided', 'sake', 'egg yolks', 'hot sauce', 'frozen chopped spinach, thawed and drained', 'olives', 'boneless beef chuck roast', 'chopped red onion', 'avocado, mashed', 'diced red onion', 'minced fresh basil', 'shredded smoked Cheddar cheese', 'cooked bacon, crumbled', 'ground dried chipotle pepper', 'Ranch-style salad dressing', 'grated Pecorino Romano cheese']
2025-04-07 18:26:10,213 - __main__ - INFO - Allergens detected: {'recipe_name': 'main dishes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'allium allergy', 'aquagenic urticaria', 'olive oil allergy', 'soy allergy', 'nightshade allergy']}
2025-04-07 18:26:10,213 - __main__ - INFO - Returning classification result: {'classification': 'main dishes', 'ingredients': ['olive oil', 'salt', 'garlic, minced', 'ground black pepper', 'water', 'garlic powder', 'all-purpose flour', 'ground beef', 'butter', 'soy sauce', 'grated Parmesan cheese', 'salt and ground black pepper to taste', 'vegetable oil', 'ground cumin', 'dried oregano', 'kosher salt', 'shredded mozzarella cheese', 'cayenne pepper', 'onion, chopped', 'milk'], 'allergens': {'recipe_name': 'main dishes', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'allium allergy', 'aquagenic urticaria', 'olive oil allergy', 'soy allergy', 'nightshade allergy']}}
2025-04-07 18:26:10,213 - __main__ - INFO - Response: 200
2025-04-07 18:26:10,213 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:26:10] "GET /get-classification/main%20dishes HTTP/1.1" 200 -
2025-04-07 18:26:25,119 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/eggs
2025-04-07 18:26:25,288 - __main__ - INFO - Retrieved ingredients: ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream', 'frozen chopped spinach, thawed and drained', 'garlic powder', 'vegetable oil', 'half-and-half', 'unbaked pie crust', 'shredded mozzarella cheese', 'egg whites', 'salt and freshly ground black pepper to taste', 'chopped fresh spinach', 'onion, chopped', 'crumbled feta cheese', 'sour cream', 'cayenne pepper', 'ground nutmeg', 'dried parsley', 'onion powder', 'shredded Monterey Jack cheese', 'fresh spinach', 'onion, diced', 'water', 'chopped green bell pepper', 'Dijon mustard', 'salt to taste', 'chopped red bell pepper', 'egg', 'sliced fresh mushrooms', 'whole milk', 'butter, melted', 'half-and-half cream', 'black pepper', 'freshly ground black pepper to taste', 'onion, finely chopped', 'chopped green onion', 'freshly ground black pepper', 'tomato, diced', 'unsalted butter', 'chopped fresh parsley', 'Cheddar cheese', 'dried basil', 'dried dill weed', 'Cheddar cheese, shredded', 'ground cumin', 'diced red bell pepper', 'cubed fully cooked ham', 'salsa', 'tomato, chopped', 'diced onion', 'large eggs', 'finely chopped onion', 'white sugar', 'eggs, lightly beaten', 'diced cooked ham', 'pepper', 'minced garlic', 'skim milk', 'shredded reduced-fat Cheddar cheese', 'red bell pepper, chopped', 'cayenne pepper, or to taste', 'cooking spray (Optional)', 'chopped fresh thyme', 'large eggs, beaten', 'salt and freshly ground black pepper', 'olive oil cooking spray', '2% milk', 'onion, thinly sliced', 'shredded Colby-Monterey Jack cheese, divided', 'garlic salt', 'chili powder', 'diced green bell pepper', 'mayonnaise', 'herbes de Provence, or to taste', 'green bell pepper, chopped', 'vegetable oil, or as needed', 'ground white pepper', 'breakfast sausage', 'minced onion', 'cubed cooked ham', 'hot pepper sauce, or to taste', 'bacon, chopped', 'shredded pepperjack cheese', 'onion, sliced', 'chopped fresh mushrooms', 'green onions, chopped', 'eggs, or more to taste', 'pork sausage', 'grated Gruyere cheese', 'pie crust pastry', 'cream cheese', 'cooked ham, cubed', 'diced green onions', 'olive oil, or as needed', 'fresh mushrooms, chopped', 'Italian seasoning', 'English muffins, split and toasted', 'cooked ham, diced', 'hot pepper sauce (Optional)', 'shredded mild Cheddar cheese', 'salt, or to taste', 'chopped kale', 'soy sauce', 'freshly grated Parmesan cheese', 'sesame seeds', 'shredded sharp Cheddar cheese', 'corn tortillas', 'shredded Cheddar cheese, divided', 'red pepper flakes', 'Worcestershire sauce', 'bulk pork sausage', 'shredded Parmesan cheese', 'red onion, diced', 'chicken broth', 'nutmeg', 'sea salt and freshly ground black pepper to taste', 'ground black pepper, or to taste']
2025-04-07 18:26:32,542 - __main__ - INFO - Allergens detected: {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}
2025-04-07 18:26:32,542 - __main__ - INFO - Returning classification result: {'classification': 'eggs', 'ingredients': ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream'], 'allergens': {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}}
2025-04-07 18:26:32,542 - __main__ - INFO - Response: 200
2025-04-07 18:26:32,542 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:26:32] "GET /get-classification/eggs HTTP/1.1" 200 -
2025-04-07 18:27:27,464 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:27:27,859 - __main__ - INFO - Starting image classification
2025-04-07 18:27:27,859 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:27:28,742 - __main__ - INFO - Image classified as: eggs
2025-04-07 18:27:28,945 - __main__ - INFO - Retrieved ingredients: ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream', 'frozen chopped spinach, thawed and drained', 'garlic powder', 'vegetable oil', 'half-and-half', 'unbaked pie crust', 'shredded mozzarella cheese', 'egg whites', 'salt and freshly ground black pepper to taste', 'chopped fresh spinach', 'onion, chopped', 'crumbled feta cheese', 'sour cream', 'cayenne pepper', 'ground nutmeg', 'dried parsley', 'onion powder', 'shredded Monterey Jack cheese', 'fresh spinach', 'onion, diced', 'water', 'chopped green bell pepper', 'Dijon mustard', 'salt to taste', 'chopped red bell pepper', 'egg', 'sliced fresh mushrooms', 'whole milk', 'butter, melted', 'half-and-half cream', 'black pepper', 'freshly ground black pepper to taste', 'onion, finely chopped', 'chopped green onion', 'freshly ground black pepper', 'tomato, diced', 'unsalted butter', 'chopped fresh parsley', 'Cheddar cheese', 'dried basil', 'dried dill weed', 'Cheddar cheese, shredded', 'ground cumin', 'diced red bell pepper', 'cubed fully cooked ham', 'salsa', 'tomato, chopped', 'diced onion', 'large eggs', 'finely chopped onion', 'white sugar', 'eggs, lightly beaten', 'diced cooked ham', 'pepper', 'minced garlic', 'skim milk', 'shredded reduced-fat Cheddar cheese', 'red bell pepper, chopped', 'cayenne pepper, or to taste', 'cooking spray (Optional)', 'chopped fresh thyme', 'large eggs, beaten', 'salt and freshly ground black pepper', 'olive oil cooking spray', '2% milk', 'onion, thinly sliced', 'shredded Colby-Monterey Jack cheese, divided', 'garlic salt', 'chili powder', 'diced green bell pepper', 'mayonnaise', 'herbes de Provence, or to taste', 'green bell pepper, chopped', 'vegetable oil, or as needed', 'ground white pepper', 'breakfast sausage', 'minced onion', 'cubed cooked ham', 'hot pepper sauce, or to taste', 'bacon, chopped', 'shredded pepperjack cheese', 'onion, sliced', 'chopped fresh mushrooms', 'green onions, chopped', 'eggs, or more to taste', 'pork sausage', 'grated Gruyere cheese', 'pie crust pastry', 'cream cheese', 'cooked ham, cubed', 'diced green onions', 'olive oil, or as needed', 'fresh mushrooms, chopped', 'Italian seasoning', 'English muffins, split and toasted', 'cooked ham, diced', 'hot pepper sauce (Optional)', 'shredded mild Cheddar cheese', 'salt, or to taste', 'chopped kale', 'soy sauce', 'freshly grated Parmesan cheese', 'sesame seeds', 'shredded sharp Cheddar cheese', 'corn tortillas', 'shredded Cheddar cheese, divided', 'red pepper flakes', 'Worcestershire sauce', 'bulk pork sausage', 'shredded Parmesan cheese', 'red onion, diced', 'chicken broth', 'nutmeg', 'sea salt and freshly ground black pepper to taste', 'ground black pepper, or to taste']
2025-04-07 18:27:36,506 - __main__ - INFO - Allergens detected: {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}
2025-04-07 18:27:36,507 - __main__ - INFO - Image classification completed in 8.65 seconds
2025-04-07 18:27:36,507 - __main__ - INFO - Returning classification result: {'classifications': ['eggs', 'european', 'main dishes', 'pasta', 'fruit desserts'], 'confidences': [0.4323418140411377, 0.29118967056274414, 0.1415310502052307, 0.04274937883019447, 0.022559039294719696], 'ingredients': ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream'], 'allergens': {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}}
2025-04-07 18:27:36,508 - __main__ - INFO - Response: 200
2025-04-07 18:27:36,510 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:27:36] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:27:40,023 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/european
2025-04-07 18:27:40,193 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'salt', 'olive oil', 'all-purpose flour', 'water', 'butter', 'eggs', 'vanilla extract', 'ground cinnamon', 'ground black pepper', 'milk', 'garlic, minced', 'egg', 'baking powder', 'dried oregano', 'salt and ground black pepper to taste', 'grated Parmesan cheese', 'onion, chopped', 'ricotta cheese', "confectioners' sugar", 'dried basil', 'unsalted butter', 'salt and pepper to taste', 'lemon juice', 'heavy cream', 'minced garlic', 'butter, softened', 'extra-virgin olive oil', 'salt to taste', 'Italian seasoning', 'olive oil, divided', 'freshly ground black pepper', 'red pepper flakes', 'lemon zest', 'ground cloves', 'ground nutmeg', 'red wine', 'paprika', 'garlic, crushed', 'vegetable oil', 'linguine pasta', 'egg yolks', 'chopped fresh basil', 'fresh lemon juice', 'tomato paste', 'baking soda', 'chopped fresh parsley', 'butter, melted', 'raisins', 'white wine', 'egg whites', 'vanilla sugar', 'shredded mozzarella cheese', 'dry white wine', 'garlic powder', 'cayenne pepper', 'dried parsley', 'honey', 'ground beef', 'diced tomatoes', 'ground allspice', 'garlic, chopped', 'crumbled feta cheese', 'chicken broth', 'chopped walnuts', 'chopped onion', 'pepper', 'onion, diced', 'boiling water', 'sour cream', 'egg, beaten', 'chopped fresh oregano', 'salt and freshly ground black pepper to taste', 'marinara sauce', 'heavy whipping cream', 'shortening', 'beef broth', 'Worcestershire sauce', 'freshly grated Parmesan cheese', 'dried thyme', 'brown sugar', 'capers', 'crushed tomatoes', 'ground ginger', 'packed brown sugar', 'eggs, beaten', 'lemon, juiced', 'whole milk', 'skinless, boneless chicken breast halves', 'chopped garlic', 'white sugar, divided', 'dried rosemary', 'kosher salt', 'cooking spray', 'almond extract', 'penne pasta', 'crushed red pepper flakes', 'spaghetti sauce', 'egg yolk', 'sifted all-purpose flour', 'grated lemon zest', 'superfine sugar', 'white sugar, or to taste', 'olive oil, or as needed', 'fennel seed', 'whole cloves', 'sliced mushrooms', 'lean ground beef', 'Dijon mustard', 'garlic, pressed', 'dry fettuccine pasta', 'dried Italian seasoning', 'red pepper flakes, or to taste', 'bread crumbs', 'dry bread crumbs', 'garlic, sliced', 'ground cumin', 'bay leaves', 'cold water', 'dried sage', "confectioners' sugar, or as needed", 'lemon, cut into wedges', 'almond meal', 'ground almonds', 'eggs, separated', 'cornstarch', 'hot water', 'active dry yeast', 'molasses', 'unsalted butter, softened', 'sugar', 'salt, or to taste', 'cornmeal', 'red wine vinegar', 'lemon, zested', 'fresh mushrooms, sliced', 'balsamic vinegar', 'garlic salt', 'grated orange zest', 'egg, lightly beaten', "confectioners' sugar for dusting", 'frozen chopped spinach, thawed and squeezed dry', 'pancetta bacon, diced', 'ground black pepper, or to taste', 'garlic, diced', 'bulk Italian sausage', 'spaghetti sauce, divided', 'ground pork', 'chopped fresh flat-leaf parsley', 'salt and pepper', 'mozzarella cheese, shredded', 'chopped carrots', 'tomato sauce', 'tomato, chopped', 'green bell pepper, diced', 'chicken stock', 'ground lamb', 'ground black pepper to taste', 'all-purpose flour, or as needed', 'salt and black pepper to taste', 'spaghetti', 'distilled white vinegar', 'half-and-half', 'frozen chopped spinach, thawed and drained', 'grated Parmesan cheese, divided', 'cake flour', 'freshly ground black pepper to taste', "confectioners' sugar, sifted", 'anise seed', 'ground coriander', 'ground cayenne pepper', 'red bell pepper, diced', 'sliced almonds', 'garlic', 'almond flour', 'uncooked white rice', 'finely chopped almonds', 'sliced fresh mushrooms', 'vodka', 'brandy', 'unsweetened cocoa powder', 'yellow onion, chopped', 'marinated artichoke hearts, drained and chopped', 'tomato puree', 'cinnamon sticks', 'freshly squeezed lemon juice', 'kosher salt, or more to taste', 'cayenne pepper, or to taste', 'butter, divided', 'yellow onion, minced', 'kosher salt, divided', 'large shrimp, peeled and deveined', 'cumin', 'white vinegar', 'garlic, peeled and crushed', 'bay leaf', 'cayenne pepper to taste', 'water (Optional)', 'chopped fresh dill', 'shallot, minced', 'flaked coconut', 'cheese tortellini', 'Alfredo sauce', 'chopped fresh spinach', 'escarole, chopped', 'cherry tomatoes, halved', 'zucchini, chopped', 'green bell pepper, chopped', 'fresh basil', 'chicken bouillon granules', 'ground turkey', 'onion powder', 'eggplant, halved lengthwise', 'tomatoes, thinly sliced', 'whipping cream', 'lemon pepper', 'sea salt', 'fresh thyme', 'ziti pasta', 'mild Italian sausage, casings removed', 'dried basil, divided', 'Italian seasoning, divided', 'shallots, chopped', 'chopped celery', 'extra virgin olive oil', 'fresh basil, chopped', 'saffron', 'red bell pepper, chopped', 'dry red wine', 'onions, chopped', 'phyllo dough', 'grated Parmesan cheese, or to taste', 'crumbled blue cheese', 'dried dill weed', 'white rice', 'saffron threads', 'onion, sliced', 'green bell pepper, sliced', 'lemon, zested and juiced', 'chopped sun-dried tomatoes', 'minced onion', 'minced fresh parsley', 'manicotti shells', 'ground white pepper', 'ground cardamom', 'garlic, finely chopped', 'slivered almonds', 'onion, finely chopped', 'uncooked orzo pasta', 'feta cheese', 'rum', 'uncooked angel hair pasta', 'portobello mushroom caps', 'green onions, chopped', 'maple syrup', 'fresh parsley, chopped', 'warm milk', 'anise extract', 'white sugar (Optional)', 'medium shrimp, peeled and deveined', 'dry sherry', 'chopped red onion', 'cocoa powder', 'feta cheese, crumbled', 'chopped hazelnuts', 'diced onion', 'uncooked medium shrimp, peeled and deveined', 'finely chopped walnuts', 'mussels, cleaned and debearded', 'cold milk', 'melted butter', 'cinnamon', 'dried marjoram', 'ground mustard', 'unsweetened chocolate', 'butter or margarine, softened', 'cream cheese, softened', 'semisweet chocolate, chopped', 'grated Parmesan cheese for topping', 'large eggs', 'lemon', 'egg whites, at room temperature', 'instant coffee powder', 'unsalted butter, at room temperature', 'light brown sugar', 'cinnamon stick', 'panko bread crumbs', 'orange juice', 'bacon', 'minced fresh rosemary', 'angel hair pasta', 'Italian-style tipo 00 flour', 'orange, sliced', 'fresh gnocchi', 'bucatini pasta', 'prosciutto', 'lean ground lamb', 'chopped fresh thyme', 'grated Romano cheese', 'vegetable broth', 'chopped fresh rosemary', 'garlic powder, or to taste', 'dried oregano, or to taste (Optional)']
2025-04-07 18:27:47,493 - __main__ - INFO - Allergens detected: {'recipe_name': 'european', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'aquagenic urticaria', 'olive oil allergy', 'sugar allergy / intolerance']}
2025-04-07 18:27:47,493 - __main__ - INFO - Returning classification result: {'classification': 'european', 'ingredients': ['white sugar', 'salt', 'olive oil', 'all-purpose flour', 'water', 'butter', 'eggs', 'vanilla extract', 'ground cinnamon', 'ground black pepper', 'milk', 'garlic, minced', 'egg', 'baking powder', 'dried oregano', 'salt and ground black pepper to taste', 'grated Parmesan cheese', 'onion, chopped', 'ricotta cheese', "confectioners' sugar"], 'allergens': {'recipe_name': 'european', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'aquagenic urticaria', 'olive oil allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:27:47,493 - __main__ - INFO - Response: 200
2025-04-07 18:27:47,493 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:27:47] "GET /get-classification/european HTTP/1.1" 200 -
2025-04-07 18:27:50,832 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/eggs
2025-04-07 18:27:51,009 - __main__ - INFO - Retrieved ingredients: ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream', 'frozen chopped spinach, thawed and drained', 'garlic powder', 'vegetable oil', 'half-and-half', 'unbaked pie crust', 'shredded mozzarella cheese', 'egg whites', 'salt and freshly ground black pepper to taste', 'chopped fresh spinach', 'onion, chopped', 'crumbled feta cheese', 'sour cream', 'cayenne pepper', 'ground nutmeg', 'dried parsley', 'onion powder', 'shredded Monterey Jack cheese', 'fresh spinach', 'onion, diced', 'water', 'chopped green bell pepper', 'Dijon mustard', 'salt to taste', 'chopped red bell pepper', 'egg', 'sliced fresh mushrooms', 'whole milk', 'butter, melted', 'half-and-half cream', 'black pepper', 'freshly ground black pepper to taste', 'onion, finely chopped', 'chopped green onion', 'freshly ground black pepper', 'tomato, diced', 'unsalted butter', 'chopped fresh parsley', 'Cheddar cheese', 'dried basil', 'dried dill weed', 'Cheddar cheese, shredded', 'ground cumin', 'diced red bell pepper', 'cubed fully cooked ham', 'salsa', 'tomato, chopped', 'diced onion', 'large eggs', 'finely chopped onion', 'white sugar', 'eggs, lightly beaten', 'diced cooked ham', 'pepper', 'minced garlic', 'skim milk', 'shredded reduced-fat Cheddar cheese', 'red bell pepper, chopped', 'cayenne pepper, or to taste', 'cooking spray (Optional)', 'chopped fresh thyme', 'large eggs, beaten', 'salt and freshly ground black pepper', 'olive oil cooking spray', '2% milk', 'onion, thinly sliced', 'shredded Colby-Monterey Jack cheese, divided', 'garlic salt', 'chili powder', 'diced green bell pepper', 'mayonnaise', 'herbes de Provence, or to taste', 'green bell pepper, chopped', 'vegetable oil, or as needed', 'ground white pepper', 'breakfast sausage', 'minced onion', 'cubed cooked ham', 'hot pepper sauce, or to taste', 'bacon, chopped', 'shredded pepperjack cheese', 'onion, sliced', 'chopped fresh mushrooms', 'green onions, chopped', 'eggs, or more to taste', 'pork sausage', 'grated Gruyere cheese', 'pie crust pastry', 'cream cheese', 'cooked ham, cubed', 'diced green onions', 'olive oil, or as needed', 'fresh mushrooms, chopped', 'Italian seasoning', 'English muffins, split and toasted', 'cooked ham, diced', 'hot pepper sauce (Optional)', 'shredded mild Cheddar cheese', 'salt, or to taste', 'chopped kale', 'soy sauce', 'freshly grated Parmesan cheese', 'sesame seeds', 'shredded sharp Cheddar cheese', 'corn tortillas', 'shredded Cheddar cheese, divided', 'red pepper flakes', 'Worcestershire sauce', 'bulk pork sausage', 'shredded Parmesan cheese', 'red onion, diced', 'chicken broth', 'nutmeg', 'sea salt and freshly ground black pepper to taste', 'ground black pepper, or to taste']
2025-04-07 18:27:58,338 - __main__ - INFO - Allergens detected: {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}
2025-04-07 18:27:58,338 - __main__ - INFO - Returning classification result: {'classification': 'eggs', 'ingredients': ['eggs', 'salt', 'milk', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'eggs, beaten', 'ground black pepper', 'butter', 'olive oil', 'cooking spray', 'bacon', 'shredded Swiss cheese', 'chopped onion', 'heavy cream', 'all-purpose flour', 'garlic, minced', 'salt and pepper to taste', 'grated Parmesan cheese', 'flour tortillas', 'heavy whipping cream'], 'allergens': {'recipe_name': 'eggs', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'allium allergy', 'olive oil allergy']}}
2025-04-07 18:27:58,338 - __main__ - INFO - Response: 200
2025-04-07 18:27:58,338 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:27:58] "GET /get-classification/eggs HTTP/1.1" 200 -
2025-04-07 18:28:32,278 - __main__ - INFO - Request: POST http://localhost:5001/classify-image
2025-04-07 18:28:33,130 - __main__ - INFO - Starting image classification
2025-04-07 18:28:33,130 - __main__ - INFO - Received image: cropped_image.png
2025-04-07 18:28:34,234 - __main__ - INFO - Image classified as: breakfast and brunch
2025-04-07 18:28:34,435 - __main__ - INFO - Retrieved ingredients: ['eggs', 'salt', 'white sugar', 'milk', 'all-purpose flour', 'vanilla extract', 'baking powder', 'ground cinnamon', 'baking soda', 'cooking spray', 'butter', 'vegetable oil', 'water', 'eggs, beaten', 'egg', 'butter, melted', 'brown sugar', 'ground nutmeg', 'shredded Cheddar cheese', 'salt and ground black pepper to taste', 'buttermilk', 'ground black pepper', 'olive oil', 'maple syrup', 'lemon juice', 'unsalted butter', 'almond milk', 'banana', 'ice cubes', 'whole wheat flour', 'onion, chopped', 'bacon', 'melted butter', 'large eggs', 'sour cream', 'fresh spinach', 'sea salt', 'frozen strawberries', 'onion powder', 'rolled oats', 'salt and pepper to taste', 'honey', 'kosher salt', 'cayenne pepper', 'garlic powder', 'bread', 'cream cheese, softened', 'pumpkin puree', 'orange juice', 'canola oil', 'peanut butter', 'egg yolks', 'vegetable oil, or as needed', 'chopped pecans', 'cottage cheese', 'eggs, lightly beaten', 'ground ginger', 'chopped onion', 'green onions, chopped', 'egg, beaten', 'warm water', 'whole milk', 'egg whites', 'garlic, minced', 'skim milk', 'chopped walnuts', 'raisins', 'active dry yeast', 'soy milk', 'frozen blueberries', 'butter, softened', 'half-and-half', 'shredded Monterey Jack cheese', 'packed brown sugar', 'chopped fresh parsley', 'bulk pork sausage', 'vanilla extract (Optional)', 'blueberries', 'unsalted butter, melted', 'light brown sugar', 'ground cloves', 'pumpkin pie spice', 'minced garlic', 'dried oregano', 'shredded sharp Cheddar cheese', 'salt to taste', 'ground allspice', 'salt and freshly ground black pepper to taste', 'egg yolk', 'frozen hash brown potatoes, thawed', 'fresh blueberries', 'cornstarch', 'nonstick cooking spray', 'mashed bananas', 'crumbled feta cheese', 'vanilla yogurt', 'banana, broken into chunks', 'lemon, juiced', 'chia seeds', 'unsweetened cocoa powder', 'cold water', 'heavy cream', 'plain yogurt', 'ice', 'green bell pepper, chopped', 'garlic salt', 'cinnamon', 'butter, or as needed', 'banana, sliced', 'shredded Mexican cheese blend', 'milk, or as needed', 'red bell pepper, diced', 'shredded Cheddar cheese, divided', 'quick cooking oats', 'onion, diced', 'diced red bell pepper', 'cream of tartar', 'chopped fresh cilantro', 'eggs, separated', 'ripe bananas, mashed', 'coconut milk', 'sugar', 'rice flour', 'cornmeal', 'almond extract', 'shredded mozzarella cheese', 'flax seeds', 'frozen banana', 'ground cinnamon, or to taste', 'dried parsley', 'light corn syrup', 'ground cumin', 'ground black pepper to taste', 'nutmeg', 'red bell pepper, chopped', 'Italian seasoning', 'butter, divided', 'paprika', 'powdered sugar', 'margarine', 'bread flour', 'diced mango', 'chopped ham', 'salsa', 'evaporated milk', 'green tea powder (matcha)', 'HORMEL Mary Kitchen Corned Beef Hash', 'bananas, mashed', 'shredded pepper Jack cheese', 'onion, finely chopped', 'grated Cheddar cheese', 'molasses', 'heavy whipping cream', 'oil', 'unsweetened almond milk', 'white vinegar', 'almond flour', 'dried cranberries', 'flax seed meal', 'vinegar', 'poppy seeds', "confectioners' sugar", 'sweet onion, chopped', 'corn tortillas', 'milk, or more as needed', 'wheat germ', 'ground pork sausage', 'refrigerated crescent roll dough', 'strawberries', 'smoked paprika', 'semisweet chocolate chips', 'chopped walnuts (Optional)', 'applesauce', 'sliced fresh strawberries', 'cream cheese', 'white bread', 'tomato, diced', 'diced green bell pepper', 'pancake mix', 'shredded mild Cheddar cheese', 'extra-virgin olive oil', 'orange, zested', 'lemon, zested', 'French bread', 'oil for frying', 'frozen puff pastry, thawed', 'Dijon mustard', 'chopped fresh chives', 'ricotta cheese', 'ground cinnamon (Optional)', 'unsalted butter, or more as needed', 'shortening', 'potatoes, peeled and diced', 'sliced fresh mushrooms', 'ground turmeric', 'water, or more as needed', 'rice milk', 'caraway seed', 'vanilla protein powder', 'diced tomatoes', 'green onions, sliced', 'white bread, cubed', 'cashew milk', 'half-and-half cream', 'melted butter, or as needed', 'chopped green bell pepper', "confectioners' sugar, or to taste", 'cocoa powder', 'eggs, or more to taste', 'all-purpose flour, divided', 'oat bran', 'white sugar (Optional)', 'hulled fresh strawberries', 'frozen raspberries', 'distilled white vinegar', 'pumpkin pure', 'coconut oil', 'chopped pecans, toasted', 'margarine, softened', 'ground paprika', 'fresh spinach, or to taste', 'coconut oil, or as needed', 'oil, or as needed', 'finely chopped onion', 'agave nectar (Optional)', 'sprinkles', 'diced ham', 'diced green chile peppers', 'small curd cottage cheese', 'canned pumpkin pure', 'whole wheat bread', 'black beans, drained and rinsed', 'avocado, diced', 'chocolate chips', 'egg white', 'garlic powder, or to taste', 'balsamic vinegar', '6 (4-ounce) mason jars', 'fresh strawberries, hulled', 'mashed potatoes', 'lemon, peeled', 'sourdough starter', 'refrigerated crescent rolls', 'plain fat-free Greek yogurt', 'frozen strawberries, or more to taste', 'self-rising flour', 'honey, or to taste', 'sweet potato, cubed', 'pecans', '2% milk', 'white pepper', 'almond butter', 'margarine, melted', 'bread, cubed', 'eggs, at room temperature', 'water as needed', 'instant lemon pudding mix', 'hot pepper sauce', 'white sugar, or to taste', 'coffee', 'flax seed', 'kale', 'shredded zucchini', 'rapid rise yeast', 'seedless raspberry jam', 'chopped green chilies', 'egg, separated', 'chopped red bell pepper', 'diced yellow bell pepper', 'diced onion', 'grated Parmesan cheese', 'soy sauce', 'bacon, cut into 1-inch pieces', 'garlic', 'freshly ground black pepper', 'dried basil', 'sugar-free white chocolate-flavored syrup (such as Torani)', 'chopped kale', 'whipped cream (Optional)', 'white sugar, divided', 'corn tortillas, torn into strips', 'frozen banana, cut into chunks', 'frozen chopped spinach, thawed and drained', 'onion, sliced', 'day-old bread']
2025-04-07 18:28:41,720 - __main__ - INFO - Allergens detected: {'recipe_name': 'breakfast and brunch', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'sugar allergy / intolerance']}
2025-04-07 18:28:41,720 - __main__ - INFO - Image classification completed in 8.59 seconds
2025-04-07 18:28:41,720 - __main__ - INFO - Returning classification result: {'classifications': ['breakfast and brunch', 'cookies', 'quick bread recipes', 'pancake recipes', 'fruit pies'], 'confidences': [0.3840537965297699, 0.10308827459812164, 0.0695401206612587, 0.04583681747317314, 0.039101336151361465], 'ingredients': ['eggs', 'salt', 'white sugar', 'milk', 'all-purpose flour', 'vanilla extract', 'baking powder', 'ground cinnamon', 'baking soda', 'cooking spray', 'butter', 'vegetable oil', 'water', 'eggs, beaten', 'egg', 'butter, melted', 'brown sugar', 'ground nutmeg', 'shredded Cheddar cheese', 'salt and ground black pepper to taste'], 'allergens': {'recipe_name': 'breakfast and brunch', 'allergies': ['milk allergy / lactose intolerance', 'corn allergy', 'nightshade allergy', 'aquagenic urticaria', 'sugar allergy / intolerance']}}
2025-04-07 18:28:41,720 - __main__ - INFO - Response: 200
2025-04-07 18:28:41,720 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:28:41] "POST /classify-image HTTP/1.1" 200 -
2025-04-07 18:28:44,938 - __main__ - INFO - Request: GET http://localhost:5001/get-classification/cookies
2025-04-07 18:28:45,108 - __main__ - INFO - Retrieved ingredients: ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening', 'rolled oats', 'ground ginger', 'water', 'cream of tartar', 'ground nutmeg', 'ground cloves', 'molasses', 'unsalted butter', 'chopped pecans', 'flaked coconut', 'vegetable oil', 'chopped walnuts', 'chocolate chips', 'cream cheese, softened', 'egg yolk', 'butter, melted', 'raisins', 'honey', 'almond extract', 'cooking spray', 'quick cooking oats', 'sweetened condensed milk', 'kosher salt', 'margarine', 'milk chocolate chips', 'white chocolate chips', 'light brown sugar', 'egg whites', 'packed light brown sugar', 'ground allspice', 'quick-cooking oats', 'cocoa powder', 'shredded coconut', 'powdered sugar', 'crunchy peanut butter', 'butter flavored shortening', 'chopped walnuts (Optional)', 'creamy peanut butter', 'crispy rice cereal', 'all purpose flour', 'sour cream', 'pumpkin puree', 'cornstarch', 'peppermint extract', 'egg, beaten', 'lemon juice', 'butterscotch chips', 'egg yolks', 'eggs, beaten', 'yellow cake mix', 'white sugar, or as needed', 'heavy cream', 'unsalted butter, at room temperature', 'dried cranberries', 'dark chocolate chips', 'graham cracker crumbs', 'granulated sugar', 'coconut oil', 'eggs, at room temperature', 'packed dark brown sugar', 'large eggs', 'sifted all-purpose flour', 'whole wheat flour', 'dark brown sugar', 'lemon extract', 'xanthan gum', 'hot water', 'vegetable shortening', 'coconut flour', 'whole milk', 'egg white', 'applesauce', 'oats', 'natural peanut butter', 'miniature marshmallows', 'firmly packed brown sugar', 'mini chocolate chips', 'boiling water', 'white sugar for decoration', 'maple syrup', 'evaporated milk', 'sliced almonds', 'pumpkin pie spice', 'wheat germ', 'heavy whipping cream', 'sweetened flaked coconut', 'butter at room temperature', 'coconut sugar', 'melted butter', 'beaten egg', 'lemon zest', 'cream cheese', 'unsalted butter, melted', 'butter, at room temperature', 'sea salt', 'unsweetened shredded coconut', 'miniature semisweet chocolate chips', 'light corn syrup', 'buttermilk', 'all-purpose flour, or more as needed', 'white sugar, divided', "milk chocolate candy kisses (such as Hershey's Kisses), unwrapped", 'superfine sugar', "sifted confectioners' sugar", 'grated orange zest', 'white sugar, divided, or as needed', 'instant espresso powder', 'semi-sweet chocolate chips', 'peanut butter chips', "confectioners' sugar, sifted", 'fine salt', 'water, or as needed', 'margarine, melted', 'granulated sugar for decoration', 'ground cardamom', 'seedless raspberry jam', 'butter or margarine, softened', 'shortening (such as Crisco)', 'white cake mix', 'milk chocolate candy kisses, unwrapped', 'brown sugar, packed', 'milk, or more as needed', 'large egg', 'sugar', 'salted butter, softened', "confectioners' sugar, or as needed", 'sorghum flour', 'hemp seed hearts', 'strawberry cake mix', 'all-purpose flour, sifted', 'palm shortening', 'vegan chocolate chips', 'fruit preserves, any flavor', 'raisins (Optional)', 'vanilla', 'fresh lemon juice', 'dark chocolate, chopped', 'almond flour', 'agave nectar', 'lime zest', 'chopped peanuts', 'miniature chocolate covered peanut butter cups, unwrapped', 'brown rice flour', 'canola oil', 'orange extract', 'old-fashioned oats', 'orange juice', 'German chocolate cake mix', 'buttery round crackers (such as Ritz)', 'ground black pepper (Optional)', 'toffee baking bits', 'milk, or as needed', 'finely chopped crystallized ginger', 'egg, at room temperature', 'ground cinnamon, divided', 'unbleached all-purpose flour', 'egg, lightly beaten', 'semisweet chocolate', 'anise extract', 'anise seed', 'ground black pepper', 'dates, pitted and chopped', "cinnamon chips (such as Hershey's)", 'persimmon pulp', 'matzo cake meal', 'ground cinnamon (Optional)', 'chopped pitted dates', 'oat flour', 'margarine, softened', 'apricot preserves', 'gluten-free vanilla extract', 'ground flax seeds', 'cocoa nibs', 'multicolored candy sprinkles', 'almond milk', 'tahini', 'finely chopped walnuts', 'all-purpose flour, or as needed', 'coconut', 'chocolate chips, or to taste', 'chocolate cookie crumbs', 'salted butter,', 'quick oats', 'walnuts', 'brown sugar, firmly packed', 'semisweet chocolate chips (Optional)', 'cinnamon', 'eggs, well beaten', 'rice flour', 'gluten-free chocolate chips', 'sweetened flaked coconut (Optional)', 'butter, melted and cooled', 'firmly packed dark brown sugar', 'softened butter', 'powdered chocolate drink mix (such as Nesquik)', 'white wine', 'raisins, or to taste (Optional)', 'dry milk powder', 'chocolate chips, or to taste (Optional)', 'ground cinnamon, or to taste', 'ground nutmeg, or to taste', 'milk chocolate, chopped', 'peppermint candy canes, crushed', 'marshmallows', 'rum', 'butter, room temperature', 'cider vinegar', 'semisweet chocolate, chopped']
2025-04-07 18:28:52,408 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:28:52,408 - __main__ - INFO - Returning classification result: {'classification': 'cookies', 'ingredients': ['white sugar', 'vanilla extract', 'all-purpose flour', 'salt', 'baking soda', 'eggs', 'baking powder', 'egg', 'butter, softened', 'ground cinnamon', 'packed brown sugar', 'brown sugar', 'butter', 'semisweet chocolate chips', 'milk', 'peanut butter', 'unsalted butter, softened', 'unsweetened cocoa powder', "confectioners' sugar", 'shortening'], 'allergens': {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}}
2025-04-07 18:28:52,408 - __main__ - INFO - Response: 200
2025-04-07 18:28:52,408 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:28:52] "GET /get-classification/cookies HTTP/1.1" 200 -
2025-04-07 18:30:34,885 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:30:36,449 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:30:40,795 - __main__ - INFO - Starting Flask application
2025-04-07 18:30:40,801 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:30:40,810 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:32:37,617 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:32:37,618 - __main__ - INFO - Starting text classification
2025-04-07 18:32:37,618 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:34:03,877 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:34:05,696 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:34:10,658 - __main__ - INFO - Starting Flask application
2025-04-07 18:34:10,658 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:34:10,676 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:34:24,436 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:34:24,437 - __main__ - INFO - Starting text classification
2025-04-07 18:34:24,437 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:34:34,378 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:34:34,378 - __main__ - INFO - Response: 200
2025-04-07 18:34:34,378 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:34:34] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:35:04,414 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:35:04,415 - __main__ - INFO - Starting text classification
2025-04-07 18:35:04,415 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:35:12,186 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:35:12,188 - __main__ - INFO - Response: 200
2025-04-07 18:35:12,188 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:35:12] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:46:08,964 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:46:08,964 - __main__ - INFO - Starting text classification
2025-04-07 18:46:08,964 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:46:16,258 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:46:16,258 - __main__ - INFO - Response: 200
2025-04-07 18:46:16,258 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:46:16] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:47:50,907 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:47:52,276 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:47:56,721 - __main__ - INFO - Starting Flask application
2025-04-07 18:47:56,728 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:47:56,736 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:48:07,493 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:48:07,494 - __main__ - INFO - Starting text classification
2025-04-07 18:48:07,494 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:48:14,692 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:48:14,692 - __main__ - INFO - Starting text classification
2025-04-07 18:48:14,692 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:48:16,992 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:48:16,993 - __main__ - INFO - Response: 200
2025-04-07 18:48:16,993 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:48:16] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:48:22,350 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:48:22,351 - __main__ - INFO - Response: 200
2025-04-07 18:48:22,352 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:48:22] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:48:33,025 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:48:33,025 - __main__ - INFO - Starting text classification
2025-04-07 18:48:33,025 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:48:40,475 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:48:40,477 - __main__ - INFO - Response: 200
2025-04-07 18:48:40,477 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:48:40] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:48:52,785 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:48:54,236 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:48:58,554 - __main__ - INFO - Starting Flask application
2025-04-07 18:48:58,561 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:48:58,569 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:48:58,790 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:48:58,790 - __main__ - INFO - Starting text classification
2025-04-07 18:48:58,791 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:49:08,307 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:49:08,307 - __main__ - INFO - Response: 200
2025-04-07 18:49:08,307 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:49:08] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:50:16,453 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:50:18,009 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:50:22,450 - __main__ - INFO - Starting Flask application
2025-04-07 18:50:22,457 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:50:22,465 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:50:48,922 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:50:48,922 - __main__ - INFO - Starting text classification
2025-04-07 18:50:48,922 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:50:58,400 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:50:58,400 - __main__ - INFO - Response: 200
2025-04-07 18:50:58,400 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:50:58] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:51:59,561 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:51:59,561 - __main__ - INFO - Starting text classification
2025-04-07 18:51:59,561 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:52:06,896 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:52:06,898 - __main__ - INFO - Response: 200
2025-04-07 18:52:06,898 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:52:06] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:52:17,303 - werkzeug - INFO -  * Detected change in 'C:\\Users\\kaleb\\repos\\School\\senior-design\\Qsine\\backend-api\\server.py', reloading
2025-04-07 18:52:18,676 - werkzeug - INFO -  * Restarting with stat
2025-04-07 18:52:23,126 - __main__ - INFO - Starting Flask application
2025-04-07 18:52:23,133 - werkzeug - WARNING -  * Debugger is active!
2025-04-07 18:52:23,142 - werkzeug - INFO -  * Debugger PIN: 589-394-206
2025-04-07 18:52:23,576 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:52:23,577 - __main__ - INFO - Starting text classification
2025-04-07 18:52:23,577 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:52:33,370 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:52:33,370 - __main__ - INFO - Response: 200
2025-04-07 18:52:33,371 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:52:33] "POST /classify-text HTTP/1.1" 200 -
2025-04-07 18:53:02,987 - __main__ - INFO - Request: POST http://localhost:5001/classify-text
2025-04-07 18:53:02,987 - __main__ - INFO - Starting text classification
2025-04-07 18:53:02,989 - __main__ - INFO - Text classified as: cookies
2025-04-07 18:53:10,477 - __main__ - INFO - Allergens detected: {'recipe_name': 'cookies', 'allergies': ['milk allergy / lactose intolerance', 'nightshade allergy', 'peanut allergy', 'sugar allergy / intolerance']}
2025-04-07 18:53:10,478 - __main__ - INFO - Response: 200
2025-04-07 18:53:10,479 - werkzeug - INFO - 127.0.0.1 - - [07/Apr/2025 18:53:10] "POST /classify-text HTTP/1.1" 200 -
